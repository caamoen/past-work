<!--
	NOTES:
		SQLErrorDept (and SQLErrorAgt) find every interval where agents are either logged in or scheduled for the today, along with other useful data (e.g. FLEX_LENGTH, WORK_START), and then peform error checks.
		Error checks are optimized for future dates (SQLErrorDeptFuture/SQLErrorAgtFuture)
		Checks for errors that can't occur simultaneuously are grouped together (e.g. Start and Flex).
		Parameters stored in OPS_PARAMETER, where OPS_PAR_PARENT_TYPE = [Department].
		Checks for Late/Gap errors wait [12 + INTERVAL_LENGTH] minutes from the start of the last schedule interval (WORK_END) in order to allow latest login/logout times to update. 
-->
<% 
	SQLErrorDept = "WITH ERROR_DATA AS " & _
	"( " & _
		"SELECT " & _
		"NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID) OPS_USR_ID, " & _
		"NVL(SCI_DEPARTMENT,ATT_DEPARTMENT) USE_DEPARTMENT, " & _
		"NVL(SCI_INTERVAL,ATT_INTERVAL) USE_INTERVAL, " & _
		"OPS_SCI_TYPE, " & _
		"LOGIN_FLAG, " & _
		"MAX(ACTUAL_LOGIN) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)) ACTUAL_LOGIN, " & _
		"MAX(ACTUAL_LOGOUT) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)) ACTUAL_LOGOUT, " & _
		"MAX(FIRST_TYPE) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)) FIRST_TYPE, " & _
		"MAX(LAST_TYPE) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)) LAST_TYPE, " & _
		"MAX(SCI_MIN) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)) SCI_MIN, " & _
		"MAX(SCI_MAX) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)) SCI_MAX, " & _
		"MIN(CASE WHEN OPS_SCI_TYPE IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') THEN NVL(SCI_INTERVAL,ATT_INTERVAL) END) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)) WORK_START, " & _
        	"MAX(CASE WHEN OPS_SCI_TYPE IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') THEN NVL(SCI_INTERVAL,ATT_INTERVAL) END) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)) WORK_END, " & _
        	"MIN(CASE WHEN LOGIN_FLAG = 1 THEN NVL(SCI_INTERVAL,ATT_INTERVAL) END) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)) LOGIN_START, " & _
        	"MAX(CASE WHEN LOGIN_FLAG = 1 THEN NVL(SCI_INTERVAL,ATT_INTERVAL) END) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)) LOGIN_END, " & _
		"NVL(MAX(WORK_HOURS) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)),0) WORK_HOURS, " & _
		"MAX(LUNCH_FLAG) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)) LUNCH_FLAG, " & _
		"MAX(OVERLAP_FLAG) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)) OVERLAP_FLAG, " & _
		"MAX(INVALID_FLAG) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)) INVALID_FLAG, " & _
		"NVL(WORKGROUP_OPEN,DEPARTMENT_OPEN) DEPARTMENT_OPEN, " & _
		"DEPARTMENT_CLOSED, " & _
		"MAX(CASE " & _
			"WHEN " & _
			"( " & _
				"FIRST_TYPE IN ('PICK','HOLW','BASE','WFHU','EXTD','ADDT') " & _
				"OR " & _
				"( " & _
					"FIRST_TYPE = 'PROJ' " & _
					"AND REGEXP_INSTR(UPPER(FIRST_NOTE),'MESSAG|CHAT') > 0 " & _
				") " & _
			") " & _
			"AND " & _
			"( " & _
				"LAST_TYPE IN ('PICK','HOLW','BASE','WFHU','EXTD','ADDT') " & _
				"OR " & _
				"( " & _
					"LAST_TYPE = 'PROJ' " & _
					"AND REGEXP_INSTR(UPPER(LAST_NOTE),'MESSAG|CHAT') > 0 " & _
				") " & _
			") " & _
			"AND (TO_CHAR(SCI_MIN,'HH24:MI') > NVL(WORKGROUP_OPEN,DEPARTMENT_OPEN) OR NVL(WORKGROUP_OPEN,DEPARTMENT_OPEN) IS NULL) " & _
			"AND (REPLACE(TO_CHAR(SCI_MAX,'HH24:MI'),'00:00','23:59') < DEPARTMENT_CLOSED OR DEPARTMENT_CLOSED IS NULL) " & _
			"AND 1440*(NVL(OFF_MIN,SCI_MAX) - SCI_MIN) > 30 AND 1440*(SCI_MAX - NVL(OFF_MAX,SCI_MIN)) > 30 " & _
		"THEN TO_NUMBER(FLEX_LENGTH) " & _
		"ELSE 0 " & _
		"END) OVER (PARTITION BY NVL(OPS_SCI_OPS_USR_ID,OPS_ATT_OPS_USR_ID)) FLEX_LENGTH, " & _
		"NVL(SCI_INTERVAL_LENGTH,ATT_INTERVAL_LENGTH) INTERVAL_LENGTH " & _
		"FROM " & _
		"( " & _
			"SELECT " & _
			"OPS_SCI_OPS_USR_ID, " & _
			"SCI_DEPARTMENT, " & _
			"SCI_TEAM, " & _
			"SCI_INTERVAL_LENGTH, " & _
			"SCI_INTERVAL, " & _
			"OPS_SCI_TYPE, " & _
			"FIRST_TYPE, " & _
			"FIRST_NOTE, " & _
			"LAST_TYPE, " & _
			"LAST_NOTE, " & _
			"SCI_MIN, " & _
			"SCI_MAX, " & _
			"WORK_HOURS, " & _
			"LUNCH_FLAG, " & _
			"OVERLAP_FLAG, " & _
			"INVALID_FLAG, " & _
			"MIN(CASE WHEN DECODE(REGEXP_INSTR(OPS_SCI_TYPE,'^VAC|UN$|PT$|PP$|HOLU|SLIP|RESH|JURY|BRVT'),0,OPS_SCI_TYPE,NULL) IS NULL THEN SCI_INTERVAL END) OVER (PARTITION BY OPS_SCI_OPS_USR_ID) OFF_MIN, " & _
			"MAX(CASE WHEN DECODE(REGEXP_INSTR(OPS_SCI_TYPE,'^VAC|UN$|PT$|PP$|HOLU|SLIP|RESH|JURY|BRVT'),0,OPS_SCI_TYPE,NULL) IS NULL THEN SCI_INTERVAL END) OVER (PARTITION BY OPS_SCI_OPS_USR_ID) + (SCI_INTERVAL_LENGTH/1440) OFF_MAX " & _
			"FROM " & _
			"( " & _
				"SELECT " & _
				"OPS_SCI_OPS_USR_ID, " & _
				"SCI_DEPARTMENT, " & _
				"SCI_TEAM, " & _
				"SCI_INTERVAL_LENGTH, " & _
				"SCI_INTERVAL, " & _
				"MAX(CASE WHEN SCI_INTERVAL BETWEEN OPS_SCI_START AND OPS_SCI_END - (1/1440) THEN OPS_SCI_TYPE END) OPS_SCI_TYPE, " & _
				"FIRST_TYPE, " & _
				"FIRST_NOTE, " & _
				"LAST_TYPE, " & _
				"LAST_NOTE, " & _
				"SCI_MIN, " & _
				"SCI_MAX, " & _
				"WORK_HOURS, " & _
				"CASE WHEN WORK_HOURS > 5 AND LUNCH_FLAG IS NULL THEN 1 END LUNCH_FLAG, " & _
				"MAX(OVERLAP_FLAG) OVERLAP_FLAG, " & _
				"MAX(INVALID_FLAG) INVALID_FLAG " & _
				"FROM " & _
				"( " & _
					"SELECT " & _
					"OPS_SCI_OPS_USR_ID, " & _
					"DECODE(OPS_USD_TEAM,'SPT','SPT','SRV','SPT','OSR','SPT',OPS_USD_TYPE) SCI_DEPARTMENT, " & _
					"DECODE(OPS_USD_TYPE,'GRP',OPS_USD_JOB,OPS_USD_TEAM) SCI_TEAM, " & _
					"OPS_SCI_START, " & _
					"OPS_SCI_END, " & _
					"OPS_SCI_TYPE, " & _
					"MAX(OPS_SCI_TYPE) KEEP (DENSE_RANK FIRST ORDER BY OPS_SCI_START, OPS_SCI_END) OVER (PARTITION BY OPS_SCI_OPS_USR_ID) FIRST_TYPE, " & _
					"MAX(OPS_SCI_NOTES) KEEP (DENSE_RANK FIRST ORDER BY OPS_SCI_START, OPS_SCI_END) OVER (PARTITION BY OPS_SCI_OPS_USR_ID) FIRST_NOTE, " & _
					"MAX(OPS_SCI_TYPE) KEEP (DENSE_RANK LAST ORDER BY OPS_SCI_START, OPS_SCI_END) OVER (PARTITION BY OPS_SCI_OPS_USR_ID) LAST_TYPE, " & _
					"MAX(OPS_SCI_NOTES) KEEP (DENSE_RANK LAST ORDER BY OPS_SCI_START, OPS_SCI_END) OVER (PARTITION BY OPS_SCI_OPS_USR_ID) LAST_NOTE, " & _
					"MIN(OPS_SCI_START) OVER (PARTITION BY OPS_SCI_OPS_USR_ID) SCI_MIN, " & _
					"MAX(OPS_SCI_END) OVER (PARTITION BY OPS_SCI_OPS_USR_ID) SCI_MAX, " & _
					"ROUND(24*SUM(CASE WHEN OPS_SCI_TYPE IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') THEN OPS_SCI_END - OPS_SCI_START ELSE 0 END) OVER (PARTITION BY OPS_SCI_OPS_USR_ID),2) WORK_HOURS, " & _
					"MAX(CASE WHEN OPS_SCI_TYPE IN ('LNCH','LNFL') THEN 1 END) OVER (PARTITION BY OPS_SCI_OPS_USR_ID) LUNCH_FLAG, " & _
					"CASE " & _
						"WHEN OPS_SCI_START < LEAD(OPS_SCI_END) OVER (PARTITION BY OPS_SCI_OPS_USR_ID ORDER BY OPS_SCI_START) " & _
						"AND OPS_SCI_END > LEAD(OPS_SCI_START) OVER (PARTITION BY OPS_SCI_OPS_USR_ID ORDER BY OPS_SCI_START) " & _
						"THEN 1 " & _
					"END OVERLAP_FLAG, " & _
					"CASE WHEN OPS_SCI_START > OPS_SCI_END THEN 1 END INVALID_FLAG " & _
					"FROM OPS_SCHEDULE_INFO " & _
					"JOIN OPS_USER_DETAIL " & _
					"ON OPS_SCI_OPS_USR_ID = OPS_USD_OPS_USR_ID " & _
					"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_USD_EFF_DATE AND OPS_USD_DIS_DATE " & _
					"WHERE TO_DATE(OPS_SCI_START) = TO_DATE(?,'MM/DD/YYYY') " & _
					"AND OPS_SCI_STATUS = 'APP' " & _
					"AND OPS_SCI_START <> OPS_SCI_END " & _
					"AND OPS_SCI_TYPE NOT LIKE 'HOL_' " & _
					"AND " & _
					"( " & _
						"DECODE(OPS_USD_TEAM,'SPT','SPT','SRV','SPT','OSR','SPT','NEW','NEW',OPS_USD_TYPE) = ? " & _
						"OR 'ALL' = ? " & _
					") "
					If PULSE_SECURITY < 5 Then
						SQLErrorDept = SQLErrorDept & "AND OPS_USD_TYPE IN ("
						USE_ARRAY = Split(PULSE_DEPARTMENT,",")
						For j = 0 to UBound(USE_ARRAY)
							If j <> UBound(USE_ARRAY) Then
								SQLErrorDept = SQLErrorDept & "'" & USE_ARRAY(j) & "',"
							Else
								SQLErrorDept = SQLErrorDept & "'" & USE_ARRAY(j) & "') "
							End If
						Next
					End If
				SQLErrorDept = SQLErrorDept & ") " & _
				"JOIN " & _
				"( " & _
					"SELECT * " & _
					"FROM " & _
					"( " & _
						"SELECT " & _
						"INTERVAL_LENGTH SCI_INTERVAL_LENGTH, " & _
						"TO_DATE(?,'MM/DD/YYYY') + (INTERVAL_LENGTH * (ROWNUM - 1))/1440 SCI_INTERVAL " & _
						"FROM " & _
						"( " & _
							"SELECT " & _
							"NVL(MAX(TO_NUMBER(OPS_PAR_VALUE)),6) INTERVAL_LENGTH " & _
							"FROM OPS_PARAMETER " & _
							"WHERE OPS_PAR_PARENT_TYPE = 'STF' " & _
							"AND OPS_PAR_CODE = 'INTERVAL_LENGTH' " & _
							"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
						") " & _
						"CONNECT BY ROWNUM < (1440/INTERVAL_LENGTH) + 1 " & _
					") " & _
				") " & _
				"ON SCI_INTERVAL BETWEEN SCI_MIN AND SCI_MAX - (1/1440) " & _
				"GROUP BY OPS_SCI_OPS_USR_ID, SCI_DEPARTMENT, SCI_TEAM, SCI_INTERVAL_LENGTH, SCI_INTERVAL, FIRST_TYPE, FIRST_NOTE, LAST_TYPE, LAST_NOTE, SCI_MIN, SCI_MAX, WORK_HOURS, CASE WHEN WORK_HOURS > 5 AND LUNCH_FLAG IS NULL THEN 1 END " & _
			") " & _
		") " & _
		"FULL OUTER JOIN " & _
		"( " & _
			"SELECT " & _
			"DISTINCT " & _
			"OPS_ATT_OPS_USR_ID, " & _
			"ATT_DEPARTMENT, " & _
			"ATT_TEAM, " & _
			"ATT_INTERVAL_LENGTH, " & _
			"ATT_INTERVAL, " & _
			"1 LOGIN_FLAG, " & _
			"ACTUAL_LOGIN, " & _
			"ACTUAL_LOGOUT " & _
			"FROM " & _
			"( " & _
				"SELECT " & _
				"OPS_ATT_OPS_USR_ID, " & _
				"DECODE(OPS_USD_TEAM,'SPT','SPT','SRV','SPT','OSR','SPT',OPS_USD_TYPE) ATT_DEPARTMENT, " & _
				"DECODE(OPS_USD_TYPE,'GRP',OPS_USD_JOB,OPS_USD_TEAM) ATT_TEAM, " & _
				"TO_DATE(OPS_ATT_DATE || ' ' || OPS_ATT_ADJ_LOGIN,'MM/DD/YYYY HH24:MI') OPS_ATT_ADJ_LOGIN, " & _
				"TO_DATE(OPS_ATT_DATE + CASE WHEN OPS_ATT_ADJ_LOGIN > OPS_ATT_ADJ_LOGOUT THEN 1 ELSE 0 END || ' ' || OPS_ATT_ADJ_LOGOUT,'MM/DD/YYYY HH24:MI') OPS_ATT_ADJ_LOGOUT, " & _
				"MIN(TO_DATE(OPS_ATT_DATE || ' ' || OPS_ATT_ACT_LOGIN,'MM/DD/YYYY HH24:MI')) OVER (PARTITION BY OPS_ATT_OPS_USR_ID) ACTUAL_LOGIN, " & _
				"MAX(TO_DATE(OPS_ATT_DATE + CASE WHEN OPS_ATT_ACT_LOGIN > OPS_ATT_ACT_LOGOUT THEN 1 ELSE 0 END || ' ' || OPS_ATT_ACT_LOGOUT,'MM/DD/YYYY HH24:MI')) OVER (PARTITION BY OPS_ATT_OPS_USR_ID) ACTUAL_LOGOUT " & _
				"FROM OPS_ATTENDANCE " & _
				"JOIN OPS_USER_DETAIL " & _
				"ON OPS_ATT_OPS_USR_ID = OPS_USD_OPS_USR_ID " & _
				"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_USD_EFF_DATE AND OPS_USD_DIS_DATE " & _
				"WHERE OPS_ATT_DATE = TO_DATE(?,'MM/DD/YYYY') " & _
				"AND OPS_ATT_TYPE = 'RES' " & _
				"AND OPS_ATT_ADJ_LOGIN <> OPS_ATT_ADJ_LOGOUT " & _
				"AND " & _
				"( " & _
					"DECODE(OPS_USD_TEAM,'SPT','SPT','SRV','SPT','OSR','SPT','NEW','NEW',OPS_USD_TYPE) = ? " & _
					"OR 'ALL' = ? " & _
				") "
				If PULSE_SECURITY < 5 Then
					SQLErrorDept = SQLErrorDept & "AND OPS_USD_TYPE IN ("
					USE_ARRAY = Split(PULSE_DEPARTMENT,",")
					For j = 0 to UBound(USE_ARRAY)
						If j <> UBound(USE_ARRAY) Then
							SQLErrorDept = SQLErrorDept & "'" & USE_ARRAY(j) & "',"
						Else
							SQLErrorDept = SQLErrorDept & "'" & USE_ARRAY(j) & "') "
						End If
					Next
				End If
			SQLErrorDept = SQLErrorDept & ") " & _
			"JOIN " & _
			"( " & _
				"SELECT * " & _
				"FROM " & _
				"( " & _
					"SELECT " & _
					"INTERVAL_LENGTH ATT_INTERVAL_LENGTH, " & _
					"TO_DATE(?,'MM/DD/YYYY') + (INTERVAL_LENGTH * (ROWNUM - 1))/1440 ATT_INTERVAL " & _
					"FROM " & _
					"( " & _
						"SELECT " & _
						"NVL(MAX(TO_NUMBER(OPS_PAR_VALUE)),6) INTERVAL_LENGTH " & _
						"FROM OPS_PARAMETER " & _
						"WHERE OPS_PAR_PARENT_TYPE = 'STF' " & _
						"AND OPS_PAR_CODE = 'INTERVAL_LENGTH' " & _
						"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
					") " & _
					"CONNECT BY ROWNUM < (1440/INTERVAL_LENGTH) + 1 " & _
				") " & _
				"WHERE ATT_INTERVAL < CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) " & _
			") " & _
			"ON ATT_INTERVAL BETWEEN OPS_ATT_ADJ_LOGIN AND OPS_ATT_ADJ_LOGOUT - (1/1440) " & _
		") " & _
		"ON OPS_SCI_OPS_USR_ID = OPS_ATT_OPS_USR_ID " & _
		"AND SCI_INTERVAL = ATT_INTERVAL " & _
		"LEFT JOIN " & _
		"( " & _
			"SELECT OPS_PAR_PARENT_TYPE USE_DEPARTMENT, OPS_PAR_VALUE DEPARTMENT_OPEN " & _
			"FROM OPS_PARAMETER " & _
			"WHERE OPS_PAR_CODE = 'DEPARTMENT_OPEN' " & _
			"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
		")DO " & _
		"ON NVL(SCI_DEPARTMENT,ATT_DEPARTMENT) = DO.USE_DEPARTMENT " & _
		"LEFT JOIN " & _
		"( " & _
			"SELECT OPS_PAR_PARENT_TYPE USE_WORKGROUP, OPS_PAR_VALUE WORKGROUP_OPEN " & _
			"FROM OPS_PARAMETER " & _
			"WHERE OPS_PAR_CODE = 'WORKGROUP_OPEN' " & _
			"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
		")WO " & _
		"ON NVL(SCI_TEAM,ATT_TEAM) = WO.USE_WORKGROUP " & _
		"LEFT JOIN " & _
		"( " & _
			"SELECT OPS_PAR_PARENT_TYPE USE_DEPARTMENT, OPS_PAR_VALUE DEPARTMENT_CLOSED " & _
			"FROM OPS_PARAMETER " & _
			"WHERE OPS_PAR_CODE = 'DEPARTMENT_CLOSED' " & _
			"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
		")DC " & _
		"ON NVL(SCI_DEPARTMENT,ATT_DEPARTMENT) = DC.USE_DEPARTMENT " & _
		"LEFT JOIN " & _
		"( " & _
			"SELECT OPS_PAR_PARENT_TYPE USE_DEPARTMENT, OPS_PAR_VALUE FLEX_LENGTH " & _
			"FROM OPS_PARAMETER " & _
			"WHERE OPS_PAR_CODE = 'FLEX_LENGTH' " & _
			"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
		")FL " & _
		"ON NVL(SCI_DEPARTMENT,ATT_DEPARTMENT) = FL.USE_DEPARTMENT " & _
	") " & _
	"SELECT " & _
	"ERROR.OPS_USR_ID USE_AGENT, " & _
	"AGT.OPS_USR_NAME AGENT_NAME, " & _
	"SUP.OPS_USR_NAME SUPERVISOR_NAME, " & _
	"CASE " & _
		"WHEN OPS_USD_TYPE = 'RES' OR OPS_USD_TEAM = 'SPT' THEN DECODE(RES_RTE_RES_RTG_ID,1,DECODE(OPS_USD_TEAM,'SLS','Sales Specialty','RES Sales'),4,'SPT VSS',5,'SPT ASR',10,'Elite Service',13,'SPT OSR') " & _
		"WHEN OPS_USD_TYPE = 'POP' AND OPS_USD_TEAM = 'POC' THEN 'Product Ops' " & _
		"WHEN OPS_USD_TYPE = 'POP' AND OPS_USD_TEAM = 'DOC' THEN 'Documents' " & _
		"WHEN OPS_USD_TYPE = 'OSS' AND OPS_USD_TEAM = 'SKD' THEN 'Schedule Changes' " & _
		"WHEN OPS_USD_TYPE = 'OSS' AND OPS_USD_TEAM = 'PRD' THEN 'Product Support' " & _
		"WHEN OPS_USD_TYPE = 'OSS' AND OPS_USD_TEAM = 'AIR' THEN 'Air Support' " & _
		"WHEN OPS_USD_TYPE = 'OSS' AND OPS_USD_TEAM = 'LED' THEN 'OSS Leads' " & _
		"WHEN OPS_USD_TYPE = 'OPS' THEN 'OPS Desk' " & _
		"WHEN OPS_USD_TYPE = 'GRP' AND OPS_USD_JOB = 'SPC' THEN 'Group Product' " & _
		"WHEN OPS_USD_TYPE = 'GRP' AND OPS_USD_JOB = 'GSP' THEN 'Group Service' " & _
		"WHEN OPS_USD_TYPE = 'GRP' AND OPS_USD_JOB = 'GSM' THEN 'Group Sales' " & _
		"WHEN OPS_USD_TYPE = 'DOC' THEN 'Facilities' " & _
		"WHEN OPS_USD_TYPE = 'CRT' THEN 'Customer Relations' " & _
		"WHEN OPS_USD_TYPE = 'ACC' AND OPS_USD_TEAM = 'REC' THEN 'Account Receivable' " & _
		"WHEN OPS_USD_TYPE = 'ACC' AND OPS_USD_TEAM = 'PAY' THEN 'Account Payable' " & _
		"WHEN OPS_USD_TYPE = 'ACC' AND OPS_USD_TEAM = 'LDA' THEN 'Account Leads' " & _
	"END || " & _
	"CASE " & _
		"WHEN OPS_USD_TYPE = 'RES' AND RES_RTE_RES_RTG_ID = 5 AND OPS_ASN_OPS_ASM_ID = 41 THEN ' - Jira' " & _
		"WHEN OPS_USD_TYPE = 'RES' AND RES_RTE_RES_RTG_ID = 5 AND OPS_ASN_OPS_ASM_ID = 45 THEN ' - TAS' " & _
		"WHEN OPS_USD_TYPE = 'RES' AND RES_RTE_RES_RTG_ID IN (1,2,3) AND OPS_ASN_OPS_ASM_ID = 43 THEN ' - Dual' " & _
		"WHEN OPS_USD_TYPE = 'RES' AND RES_RTE_RES_RTG_ID IN (1,2,3) AND OPS_ASN_OPS_ASM_ID = 5 THEN ' - Intl' " & _
		"WHEN OPS_USD_TYPE = 'RES' AND RES_RTE_RES_RTG_ID IN (1,2,3) AND OPS_ASN_OPS_ASM_ID = 4 THEN ' - Haw' " & _
		"WHEN OPS_USD_TYPE = 'RES' AND RES_RTE_RES_RTG_ID IN (1,2,3) AND OPS_ASN_OPS_ASM_ID = 3 THEN ' - Car' " & _
	"END USE_WORKGROUP, " & _
	"DECODE(OPS_USD_CLASS,'RGFT','Reg Full-Time','RGPT','Reg Part-time','PT<30','PT Less Than 30','LEAVE','On Leave') USE_CLASS, " & _
	"DECODE(OPS_USD_LOCATION,'MOT','In-House','WFH','Work From Home','WFD','Work From Distance') USE_LOCATION, " & _
	"NVL2(NOTE_USR_ID,1,0) NOTE_BOOL, " & _
	"NVL2(WAIVER_USR_ID,1,0) WAIVER_BOOL, " & _
	"ERROR_CODE, " & _
	"ACTION_STATUS, " & _
	"ACTION_DATA, " & _
	"COUNT(*) OVER () AGENT_COUNT " & _
	"FROM " & _
	"( " & _
		"SELECT " & _
		"DISTINCT " & _
		"OPS_USR_ID, " & _
		"LISTAGG(ERROR_CODE,';') WITHIN GROUP (ORDER BY ERROR_CODE) OVER (PARTITION BY OPS_USR_ID) ERROR_CODE, " & _
		"LISTAGG(ACTION_STATUS,';') WITHIN GROUP (ORDER BY ERROR_CODE) OVER (PARTITION BY OPS_USR_ID) ACTION_STATUS, " & _
		"LISTAGG(ACTION_DATA,';') WITHIN GROUP (ORDER BY ERROR_CODE) OVER (PARTITION BY OPS_USR_ID) ACTION_DATA " & _
		"FROM " & _
		"( " & _
			"SELECT DISTINCT " & _
			"OPS_USR_ID, " & _
			"ERROR_CODE, " & _
			"1 ACTION_STATUS, " & _
			"ACTION_DATA " & _
			"FROM " & _
			"( " & _
				"SELECT OPS_USR_ID, " & _
				"CASE " & _
					"WHEN CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) > WORK_START + ((FLEX_LENGTH + (INTERVAL_LENGTH + 12))/1440) AND ACTUAL_LOGIN IS NULL THEN 'LATE' " & _
					"WHEN DECODE(FLEX_LENGTH,0,LOGIN_START,ACTUAL_LOGIN) > WORK_START + (FLEX_LENGTH/1440) OR DECODE(FLEX_LENGTH,0,LOGIN_START,ACTUAL_LOGIN) < WORK_START - (FLEX_LENGTH/1440) THEN 'FLEX' " & _
					"WHEN WORK_START <> LOGIN_START THEN 'STRT' " & _
					"WHEN ACTUAL_LOGIN > WORK_START AND FIRST_TYPE = 'NEWH' THEN 'NFLX' " & _
					"WHEN TO_CHAR(WORK_START,'HH24:MI') = DEPARTMENT_OPEN AND TO_CHAR(ACTUAL_LOGIN,'HH24:MI') > DEPARTMENT_OPEN THEN 'OFLX' " & _
					"WHEN ACTUAL_LOGIN IS NOT NULL AND WORK_HOURS = 0 AND (NVL(FIRST_TYPE,'NA') <> 'WFHU' OR NVL(LAST_TYPE,'NA') <> 'WFHU') THEN 'SHFT' " & _
				"END ERROR_CODE, " & _
				"CASE " & _
					"WHEN CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) > WORK_START + ((FLEX_LENGTH + (INTERVAL_LENGTH + 12))/1440) AND ACTUAL_LOGIN IS NULL THEN '0' " & _
					"WHEN DECODE(FLEX_LENGTH,0,LOGIN_START,ACTUAL_LOGIN) > WORK_START + (FLEX_LENGTH/1440) OR DECODE(FLEX_LENGTH,0,LOGIN_START,ACTUAL_LOGIN) < WORK_START - (FLEX_LENGTH/1440) THEN '0' " & _
					"WHEN WORK_START <> LOGIN_START THEN TO_CHAR(LOGIN_START,'HH24:MI') " & _
				"ELSE '0' " & _
				"END ACTION_DATA " & _
				"FROM ERROR_DATA " & _
			") " & _
			"WHERE ERROR_CODE IS NOT NULL " & _
			"UNION ALL " & _
			"SELECT DISTINCT OPS_USR_ID, " & _
			"'END', " & _
			"1, " & _
			"'0' " & _
			"FROM ERROR_DATA " & _
			"WHERE LOGIN_END <> WORK_END " & _
			"AND CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) > WORK_END + ((INTERVAL_LENGTH + 12)/1440) " & _
			"UNION ALL " & _
			"SELECT " & _
			"DISTINCT " & _
			"OPS_USR_ID, " & _
			"'GAP', " & _
			"CASE WHEN CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) > SCI_MAX THEN 1 ELSE 0 END, " & _
			"'0' " & _
			"FROM " & _
			"( " & _
				"SELECT " & _
				"OPS_USR_ID, " & _
				"USE_INTERVAL, " & _
				"WORK_START, " & _
				"WORK_END, " & _
				"SCI_MAX, " & _
				"GAP_FLAG, " & _
				"NVL(LAST_VALUE(NVL2(GAP_FLAG,NULL,USE_INTERVAL + (INTERVAL_LENGTH/1440)) IGNORE NULLS) OVER (PARTITION BY OPS_USR_ID ORDER BY USE_INTERVAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),SCI_MIN) GAP_START, " & _
				"NVL(FIRST_VALUE(NVL2(GAP_FLAG,NULL,USE_INTERVAL - (INTERVAL_LENGTH/1440)) IGNORE NULLS) OVER (PARTITION BY OPS_USR_ID ORDER BY USE_INTERVAL ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING),SCI_MAX) GAP_END " & _
				"FROM " & _
				"( " & _
					"SELECT " & _
					"OPS_USR_ID, " & _
					"USE_INTERVAL, " & _
					"INTERVAL_LENGTH, " & _
					"WORK_START, " & _
					"WORK_END, " & _
					"SCI_MIN, " & _
					"SCI_MAX, " & _
					"CASE " & _
						"WHEN CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) > USE_INTERVAL + ((INTERVAL_LENGTH + 12)/1440) " & _
						"AND " & _
						"( " & _
							"(" & _
								"OPS_SCI_TYPE IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') " & _
								"AND LOGIN_FLAG IS NULL " & _
							") " & _
							"OR " & _
							"(" & _
								"OPS_SCI_TYPE IN ('LNCH','LNFL','LLPT','LLUN') " & _
								"AND LAST_VALUE(DECODE(OPS_SCI_TYPE,NULL,'NULL','LNCH',NULL,'LNFL',NULL,'LLPT',NULL,'LLUN',NULL,OPS_SCI_TYPE) IGNORE NULLS) OVER (PARTITION BY OPS_USR_ID ORDER BY USE_INTERVAL ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING) IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') " & _
								"AND FIRST_VALUE(DECODE(OPS_SCI_TYPE,NULL,'NULL','LNCH',NULL,'LNFL',NULL,'LLPT',NULL,'LLUN',NULL,OPS_SCI_TYPE) IGNORE NULLS) OVER (PARTITION BY OPS_USR_ID ORDER BY USE_INTERVAL ROWS BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING) IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') " & _
								"AND LOGIN_FLAG IS NULL " & _
							") " & _
							"OR " & _
							"( " & _
								"NVL(OPS_SCI_TYPE,'NA') NOT IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ','WFHU','OTRG','LNCH','LNFL','LLPT','LLUN') " & _
								"AND LOGIN_FLAG = 1 " & _
							") " & _
							"OR " & _
							"(" & _
								"OPS_SCI_TYPE IN ('LNCH','LNFL','LLPT','LLUN') " & _
								"AND NOT " & _
								"( " & _
									"LAST_VALUE(DECODE(OPS_SCI_TYPE,NULL,'NULL','LNCH',NULL,'LNFL',NULL,'LLPT',NULL,'LLUN',NULL,OPS_SCI_TYPE) IGNORE NULLS) OVER (PARTITION BY OPS_USR_ID ORDER BY USE_INTERVAL ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING) IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') " & _
									"AND FIRST_VALUE(DECODE(OPS_SCI_TYPE,NULL,'NULL','LNCH',NULL,'LNFL',NULL,'LLPT',NULL,'LLUN',NULL,OPS_SCI_TYPE) IGNORE NULLS) OVER (PARTITION BY OPS_USR_ID ORDER BY USE_INTERVAL ROWS BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING) IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') " & _
								") " & _
								"AND LOGIN_FLAG = 1 " & _
							") " & _
						") " & _
						"THEN 1 " & _
					"END GAP_FLAG " & _
					"FROM ERROR_DATA " & _
					"WHERE ACTUAL_LOGIN IS NOT NULL " & _
				") " & _
			") " & _
			"WHERE GAP_FLAG = 1 " & _
			"AND GAP_END < WORK_END " & _
			"AND GAP_START > WORK_START " & _
			"UNION ALL " & _
			"SELECT " & _
			"DISTINCT " & _
			"OPS_USR_ID, " & _
			"'LWAV', " & _
			"1, " & _
			"'0' " & _
			"FROM ERROR_DATA " & _
			"WHERE LUNCH_FLAG = 1 " & _
			"UNION ALL " & _
			"SELECT " & _
			"OPS_USR_ID, " & _
			"'LMIN', " & _
			"1, " & _
			"'0' " & _
			"FROM " & _
			"( " & _
				"SELECT " & _
				"OPS_USR_ID, " & _
				"SUM(LUNCH_MINUTES) SCHEDULE_LUNCH " & _
				"FROM " & _
				"( " & _
					"SELECT " & _
					"OPS_USR_ID, " & _
					"CASE " & _
						"WHEN " & _
							"OPS_SCI_TYPE IN ('LNCH','LNFL','LLPT','LLUN') " & _
							"AND LAST_VALUE(DECODE(OPS_SCI_TYPE,NULL,'NULL','LNCH',NULL,'LNFL',NULL,'LLPT',NULL,'LLUN',NULL,OPS_SCI_TYPE) IGNORE NULLS) OVER (PARTITION BY OPS_USR_ID ORDER BY USE_INTERVAL ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING) IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') " & _
							"AND FIRST_VALUE(DECODE(OPS_SCI_TYPE,NULL,'NULL','LNCH',NULL,'LNFL',NULL,'LLPT',NULL,'LLUN',NULL,OPS_SCI_TYPE) IGNORE NULLS) OVER (PARTITION BY OPS_USR_ID ORDER BY USE_INTERVAL ROWS BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING) IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') " & _
						"THEN INTERVAL_LENGTH " & _
						"ELSE 0 " & _
					"END LUNCH_MINUTES " & _
					"FROM ERROR_DATA " & _
				") " & _
				"GROUP BY OPS_USR_ID " & _
			") " & _
			"JOIN " & _
			"( " & _
				"SELECT " & _
				"RES_PHN_OPS_USR_ID, " & _
				"NVL(ROUND(RES_PHN_HOURS/60),0) SWITCH_LUNCH  " & _
				"FROM RES_PHONE_STATS " & _
				"WHERE RES_PHN_TYPE = 'LUN' " & _
				"AND RES_PHN_DATE = TO_DATE(?,'MM/DD/YYYY') " & _
			") " & _
			"ON OPS_USR_ID = RES_PHN_OPS_USR_ID " & _
			"WHERE SWITCH_LUNCH - SCHEDULE_LUNCH NOT BETWEEN -3 AND 2 " & _
			"UNION ALL " & _
			"SELECT " & _
			"DISTINCT " & _
			"OPS_USR_ID, " & _
			"'OLAP', " & _
			"0, " & _
			"'0' " & _
			"FROM ERROR_DATA " & _
			"WHERE OVERLAP_FLAG = 1 " & _
			"UNION ALL " & _
			"SELECT " & _
			"DISTINCT " & _
			"OPS_USR_ID, " & _
			"'IVLD', " & _
			"0, " & _
			"'0' " & _
			"FROM ERROR_DATA " & _
			"WHERE INVALID_FLAG = 1 " & _
			"UNION ALL " & _			
			"SELECT " & _
			"OPS_SCI_OPS_USR_ID, " & _
			"'BWHC', " & _
			"CASE WHEN CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) > MAX(OPS_SCI_END) THEN 1 ELSE 0 END, " & _
			"'0' " & _
			"FROM OPS_SCHEDULE_INFO " & _
			"JOIN OPS_USER_DETAIL " & _
			"ON OPS_SCI_OPS_USR_ID = OPS_USD_OPS_USR_ID " & _
			"AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 BETWEEN OPS_USD_EFF_DATE AND OPS_USD_DIS_DATE " & _
			"LEFT JOIN OPS_PARAMETER " & _
			"ON OPS_PAR_CODE = 'REDUCED_HOURS' " & _
			"AND " & _
			"( " & _
				"DECODE(OPS_USD_TEAM,'SPT','SPT','SRV','SPT','OSR','SPT','NEW','NEW',OPS_USD_TYPE) = OPS_PAR_PARENT_TYPE " & _
				"OR OPS_PAR_PARENT_TYPE = 'ALL' " & _
			") " & _
			"AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
			"LEFT JOIN SYS_CODE_DETAIL " & _
			"ON SYS_CDD_SYS_CDM_ID = 583 " & _
			"AND SYS_CDD_NAME = OPS_SCI_OPS_USR_ID " & _
			"AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 BETWEEN TO_DATE(REGEXP_SUBSTR(SYS_CDD_VALUE,'[^_]+',1,2),'MM/DD/YYYY') + 1 AND TO_DATE('6/27/2020','MM/DD/YYYY') " & _
			"WHERE OPS_SCI_STATUS = 'APP' " & _
			"AND OPS_SCI_TYPE NOT IN ('LNCH','LNFL') " & _
			"AND TO_DATE(OPS_SCI_START) BETWEEN TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 1 AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 " & _
			"AND " & _
			"( " & _
				"DECODE(OPS_USD_TEAM,'SPT','SPT','SRV','SPT','OSR','SPT','NEW','NEW',OPS_USD_TYPE) = ? " & _
				"OR 'ALL' = ? " & _
			") "
			If PULSE_SECURITY < 5 Then
				SQLErrorDept = SQLErrorDept & "AND OPS_USD_TYPE IN ("
				USE_ARRAY = Split(PULSE_DEPARTMENT,",")
				For j = 0 to UBound(USE_ARRAY)
					If j <> UBound(USE_ARRAY) Then
						SQLErrorDept = SQLErrorDept & "'" & USE_ARRAY(j) & "',"
					Else
						SQLErrorDept = SQLErrorDept & "'" & USE_ARRAY(j) & "') "
					End If
				Next
			End If
			SQLErrorDept = SQLErrorDept & "GROUP BY OPS_SCI_OPS_USR_ID, OPS_USD_SCH_HOURS, OPS_PAR_VALUE, SYS_CDD_ID " & _
			"HAVING " & _
			"( " & _
				"CASE WHEN OPS_PAR_VALUE IS NOT NULL AND SYS_CDD_ID IS NULL AND ROUND(SUM(DECODE(REGEXP_INSTR(OPS_SCI_TYPE,'SLIP|MLUN'),0,0,24*(OPS_SCI_END-OPS_SCI_START))),1) = 0 THEN OPS_PAR_VALUE*OPS_USD_SCH_HOURS - ROUND(24*SUM(OPS_SCI_END-OPS_SCI_START),2) END <> 0 " & _
				"OR CASE WHEN OPS_PAR_VALUE IS NOT NULL AND SYS_CDD_ID IS NOT NULL THEN OPS_USD_SCH_HOURS - ROUND(24*SUM(OPS_SCI_END-OPS_SCI_START),2) END <> 0 " & _
				"OR CASE WHEN OPS_PAR_VALUE IS NULL THEN OPS_USD_SCH_HOURS - ROUND(24*SUM(OPS_SCI_END-OPS_SCI_START),2) END > 0 " & _
			") " & _
		") " & _
		"LEFT JOIN " & _
		"( " & _
			"SELECT " & _
			"TO_NUMBER(TRIM(REGEXP_SUBSTR(RES_DLN_TEXT,'[^-]+',1,1))) NOTE_USR_ID, " & _
			"TRIM(RES_DLN_TYPE) NOTE_CODE " & _
			"FROM RES_DAILY_STATS_NOTES " & _
			"WHERE RES_DLN_DATE = TO_DATE(?,'MM/DD/YYYY') " & _
			"AND TRIM(RES_DLN_TYPE) IN ('LATE','FLEX','SHFT','STRT','END','NFLX','OFLX','GAP','LMIN','LWAV','OLAP','IVLD') " & _
			"UNION ALL " & _
			"SELECT " & _
			"TO_NUMBER(TRIM(REGEXP_SUBSTR(RES_DLN_TEXT,'[^-]+',1,1))), " & _
			"'BWHC' " & _
			"FROM RES_DAILY_STATS_NOTES " & _
			"WHERE RES_DLN_DATE BETWEEN TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 1 AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 " & _
			"AND TRIM(RES_DLN_TYPE) = 'BWHC' " & _		
		") " & _
		"ON OPS_USR_ID = NOTE_USR_ID " & _
		"AND ERROR_CODE = NOTE_CODE " & _
		"WHERE NOTE_CODE IS NULL " & _
	")ERROR " & _
	"JOIN OPS_USER_DETAIL " & _
	"ON ERROR.OPS_USR_ID = OPS_USD_OPS_USR_ID " & _
	"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_USD_EFF_DATE AND OPS_USD_DIS_DATE " & _
	"JOIN OPS_USER AGT " & _
	"ON ERROR.OPS_USR_ID = AGT.OPS_USR_ID " & _
	"JOIN OPS_USER SUP " & _
	"ON OPS_USD_SUPERVISOR = SUP.OPS_USR_ID " & _
	"LEFT JOIN " & _
	"( " & _
		"SELECT " & _
		"RES_RTE_OPS_USR_ID, " & _
		"MAX(DECODE(RES_RTE_RES_RTG_ID,0,NULL,RES_RTE_RES_RTG_ID)) KEEP (DENSE_RANK LAST ORDER BY RTE_ORDERING) RES_RTE_RES_RTG_ID " & _
		"FROM " & _
		"( " & _
			"SELECT " & _
			"RES_RTE_OPS_USR_ID, " & _
			"DECODE(RES_RTE_RES_RTG_ID,2,1,3,1,RES_RTE_RES_RTG_ID) RES_RTE_RES_RTG_ID, " & _
			"1 RTE_ORDERING " & _
			"FROM RES_ROUTING " & _
			"WHERE RES_RTE_YEAR = TO_CHAR(CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE)-(6/24),'YYYY') " & _
			"AND RES_RTE_MONTH = TO_CHAR(CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE)-(6/24),'MM') " & _
			"UNION ALL " & _
			"SELECT TO_NUMBER(SYS_CDD_NAME), " & _
			"DECODE(TO_NUMBER(REGEXP_SUBSTR(SYS_CDD_VALUE,'[^;]+',1,2)),2,1,3,1,TO_NUMBER(REGEXP_SUBSTR(SYS_CDD_VALUE,'[^;]+',1,2))), " & _
			"2 " & _
			"FROM SYS_CODE_DETAIL " & _
			"WHERE SYS_CDD_SYS_CDM_ID = 508 " & _
			"AND TO_DATE(?,'MM/DD/YYYY') >= TO_DATE(REGEXP_SUBSTR(SYS_CDD_VALUE,'[^;]+',1,1),'MM/DD/YYYY') " & _
			"AND TO_DATE(REGEXP_SUBSTR(SYS_CDD_VALUE,'[^;]+',1,1),'MM/DD/YYYY') >= TO_DATE(CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE)) " & _
			"UNION ALL " & _
			"SELECT " & _
			"RES_STA_OPS_USR_ID, " & _
			"DECODE(RES_STA_RES_RTD_ID,2,1,3,1,RES_STA_RES_RTD_ID) RES_STA_RES_RTD_ID, " & _
			"2 " & _
			"FROM RES_STATS_INCENTIVE " & _
			"WHERE RES_STA_DATE = TO_DATE(?,'MM/DD/YYYY') " & _
		") " & _
		"GROUP BY RES_RTE_OPS_USR_ID " & _
	") " & _
	"ON ERROR.OPS_USR_ID = RES_RTE_OPS_USR_ID " & _
	"LEFT JOIN " & _
	"( " & _
		"SELECT " & _
		"OPS_ASN_OPS_USR_ID, " & _
		"MAX(OPS_ASN_OPS_ASM_ID) OPS_ASN_OPS_ASM_ID " & _
		"FROM OPS_ASSIGNMENT " & _
		"WHERE OPS_ASN_OPS_ASM_ID IN (1,2,3,4,5,39,40,41,43,45,50) " & _
		"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_ASN_EFF_DATE AND OPS_ASN_DIS_DATE " & _
		"GROUP BY OPS_ASN_OPS_USR_ID " & _
	") " & _
	"ON ERROR.OPS_USR_ID = OPS_ASN_OPS_USR_ID " & _
	"LEFT JOIN " & _
	"( " & _
		"SELECT DISTINCT TO_NUMBER(TRIM(REGEXP_SUBSTR(RES_DLN_TEXT,'[^-]+',1,1))) NOTE_USR_ID " & _
		"FROM RES_DAILY_STATS_NOTES " & _
		"WHERE " & _
		"( " & _
			"( " & _
				"RES_DLN_DATE = TO_DATE(?,'MM/DD/YYYY') " & _
				"AND " & _
				"( " & _
					"TRIM(RES_DLN_TYPE) IN ('LATE','FLEX','SHFT','STRT','END','NFLX','OFLX','GAP','LMIN','OLAP','IVLD','ABS','FWP','OTH','OUT','WFH','NA') " & _
					"OR " & _
					"( " & _
						"TRIM(RES_DLN_TYPE) = 'LWAV' " & _
						"AND DECODE(INSTR(RES_DLN_TEXT,'-'),0,NULL,TRIM(SUBSTR(RES_DLN_TEXT,INSTR(RES_DLN_TEXT,'-')+1))) IS NOT NULL " & _
					") " & _
				") " & _
			") " & _
			"OR " & _
			"( " & _
				"RES_DLN_DATE BETWEEN TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 1 AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 " & _
				"AND TRIM(RES_DLN_TYPE) = 'BWHC' " & _
			") " & _
		") " & _
	") " & _
	"ON ERROR.OPS_USR_ID = NOTE_USR_ID " & _
	"LEFT JOIN " & _
	"( " & _
		"SELECT DISTINCT TO_NUMBER(TRIM(REGEXP_SUBSTR(RES_DLN_TEXT,'[^-]+',1,1))) WAIVER_USR_ID " & _
		"FROM RES_DAILY_STATS_NOTES " & _
		"WHERE RES_DLN_DATE = TO_DATE(?,'MM/DD/YYYY') " & _
		"AND TRIM(RES_DLN_TYPE) = 'LWAV' " & _
	") " & _
	"ON ERROR.OPS_USR_ID = WAIVER_USR_ID " & _
	"WHERE OPS_USD_CLASS IN ('RGFT','RGPT','PT<30','LEAVE') " & _
	"AND OPS_USD_LOCATION IN ('MOT','WFD','WFH') " & _
	"AND OPS_USD_PAY_RATE > 0 " & _
	"ORDER BY AGT.OPS_USR_NAME"

	SQLErrorDeptFuture = "WITH ERROR_DATA AS " & _
	"( " & _
		"SELECT " & _
		"OPS_SCI_OPS_USR_ID OPS_USR_ID, " & _
		"MAX(CASE WHEN WORK_HOURS > 5 AND LUNCH_FLAG IS NULL THEN 1 END) LUNCH_FLAG, " & _
		"MAX(OVERLAP_FLAG) OVERLAP_FLAG, " & _
		"MAX(INVALID_FLAG) INVALID_FLAG " & _
		"FROM " & _
		"( " & _
			"SELECT " & _
			"OPS_SCI_OPS_USR_ID, " & _
			"ROUND(24*SUM(CASE WHEN OPS_SCI_TYPE IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') THEN OPS_SCI_END - OPS_SCI_START ELSE 0 END) OVER (PARTITION BY OPS_SCI_OPS_USR_ID),2) WORK_HOURS, " & _
			"MAX(CASE WHEN OPS_SCI_TYPE IN ('LNCH','LNFL') THEN 1 END) OVER (PARTITION BY OPS_SCI_OPS_USR_ID) LUNCH_FLAG, " & _
			"CASE " & _
				"WHEN OPS_SCI_START < LEAD(OPS_SCI_END) OVER (PARTITION BY OPS_SCI_OPS_USR_ID ORDER BY OPS_SCI_START) " & _
				"AND OPS_SCI_END > LEAD(OPS_SCI_START) OVER (PARTITION BY OPS_SCI_OPS_USR_ID ORDER BY OPS_SCI_START) " & _
				"THEN 1 " & _
			"END OVERLAP_FLAG, " & _
			"CASE WHEN OPS_SCI_START > OPS_SCI_END THEN 1 END INVALID_FLAG " & _
			"FROM OPS_SCHEDULE_INFO " & _
			"JOIN OPS_USER_DETAIL " & _
			"ON OPS_SCI_OPS_USR_ID = OPS_USD_OPS_USR_ID " & _
			"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_USD_EFF_DATE AND OPS_USD_DIS_DATE " & _
			"WHERE TO_DATE(OPS_SCI_START) = TO_DATE(?,'MM/DD/YYYY') " & _
			"AND OPS_SCI_STATUS = 'APP' " & _
			"AND OPS_SCI_START <> OPS_SCI_END " & _
			"AND OPS_SCI_TYPE NOT LIKE 'HOL_' " & _
			"AND " & _
			"( " & _
				"DECODE(OPS_USD_TEAM,'SPT','SPT','SRV','SPT','OSR','SPT','NEW','NEW',OPS_USD_TYPE) = ? " & _
				"OR 'ALL' = ? " & _
			") "
			If PULSE_SECURITY < 5 Then
				SQLErrorDeptFuture = SQLErrorDeptFuture & "AND OPS_USD_TYPE IN ("
				USE_ARRAY = Split(PULSE_DEPARTMENT,",")
				For j = 0 to UBound(USE_ARRAY)
					If j <> UBound(USE_ARRAY) Then
						SQLErrorDeptFuture = SQLErrorDeptFuture & "'" & USE_ARRAY(j) & "',"
					Else
						SQLErrorDeptFuture = SQLErrorDeptFuture & "'" & USE_ARRAY(j) & "') "
					End If
				Next
			End If
		SQLErrorDeptFuture = SQLErrorDeptFuture & ") " & _
		"GROUP BY OPS_SCI_OPS_USR_ID " & _
	") " & _
	"SELECT " & _
	"ERROR.OPS_USR_ID USE_AGENT, " & _
	"AGT.OPS_USR_NAME AGENT_NAME, " & _
	"SUP.OPS_USR_NAME SUPERVISOR_NAME, " & _
	"CASE " & _
		"WHEN OPS_USD_TYPE = 'RES' OR OPS_USD_TEAM = 'SPT' THEN DECODE(RES_RTE_RES_RTG_ID,1,DECODE(OPS_USD_TEAM,'SLS','Sales Specialty','RES Sales'),4,'SPT VSS',5,'SPT ASR',10,'Elite Service',13,'SPT OSR') " & _
		"WHEN OPS_USD_TYPE = 'POP' AND OPS_USD_TEAM = 'POC' THEN 'Product Ops' " & _
		"WHEN OPS_USD_TYPE = 'POP' AND OPS_USD_TEAM = 'DOC' THEN 'Documents' " & _
		"WHEN OPS_USD_TYPE = 'OSS' AND OPS_USD_TEAM = 'SKD' THEN 'Schedule Changes' " & _
		"WHEN OPS_USD_TYPE = 'OSS' AND OPS_USD_TEAM = 'PRD' THEN 'Product Support' " & _
		"WHEN OPS_USD_TYPE = 'OSS' AND OPS_USD_TEAM = 'AIR' THEN 'Air Support' " & _
		"WHEN OPS_USD_TYPE = 'OSS' AND OPS_USD_TEAM = 'LED' THEN 'OSS Leads' " & _
		"WHEN OPS_USD_TYPE = 'OPS' THEN 'OPS Desk' " & _
		"WHEN OPS_USD_TYPE = 'GRP' AND OPS_USD_JOB = 'SPC' THEN 'Group Product' " & _
		"WHEN OPS_USD_TYPE = 'GRP' AND OPS_USD_JOB = 'GSP' THEN 'Group Service' " & _
		"WHEN OPS_USD_TYPE = 'GRP' AND OPS_USD_JOB = 'GSM' THEN 'Group Sales' " & _
		"WHEN OPS_USD_TYPE = 'DOC' THEN 'Facilities' " & _
		"WHEN OPS_USD_TYPE = 'CRT' THEN 'Customer Relations' " & _
		"WHEN OPS_USD_TYPE = 'ACC' AND OPS_USD_TEAM = 'REC' THEN 'Account Receivable' " & _
		"WHEN OPS_USD_TYPE = 'ACC' AND OPS_USD_TEAM = 'PAY' THEN 'Account Payable' " & _
		"WHEN OPS_USD_TYPE = 'ACC' AND OPS_USD_TEAM = 'LDA' THEN 'Account Leads' " & _
	"END || " & _
	"CASE " & _
		"WHEN OPS_USD_TYPE = 'RES' AND RES_RTE_RES_RTG_ID = 5 AND OPS_ASN_OPS_ASM_ID = 41 THEN ' - Jira' " & _
		"WHEN OPS_USD_TYPE = 'RES' AND RES_RTE_RES_RTG_ID = 5 AND OPS_ASN_OPS_ASM_ID = 45 THEN ' - TAS' " & _
		"WHEN OPS_USD_TYPE = 'RES' AND RES_RTE_RES_RTG_ID IN (1,2,3) AND OPS_ASN_OPS_ASM_ID = 43 THEN ' - Dual' " & _
		"WHEN OPS_USD_TYPE = 'RES' AND RES_RTE_RES_RTG_ID IN (1,2,3) AND OPS_ASN_OPS_ASM_ID = 5 THEN ' - Intl' " & _
		"WHEN OPS_USD_TYPE = 'RES' AND RES_RTE_RES_RTG_ID IN (1,2,3) AND OPS_ASN_OPS_ASM_ID = 4 THEN ' - Haw' " & _
		"WHEN OPS_USD_TYPE = 'RES' AND RES_RTE_RES_RTG_ID IN (1,2,3) AND OPS_ASN_OPS_ASM_ID = 3 THEN ' - Car' " & _
	"END USE_WORKGROUP, " & _
	"DECODE(OPS_USD_CLASS,'RGFT','Reg Full-Time','RGPT','Reg Part-time','PT<30','PT Less Than 30','LEAVE','On Leave') USE_CLASS, " & _
	"DECODE(OPS_USD_LOCATION,'MOT','In-House','WFH','Work From Home','WFD','Work From Distance') USE_LOCATION, " & _
	"NVL2(NOTE_USR_ID,1,0) NOTE_BOOL, " & _
	"NVL2(WAIVER_USR_ID,1,0) WAIVER_BOOL, " & _
	"ERROR_CODE, " & _
	"ACTION_STATUS, " & _
	"ACTION_DATA, " & _
	"COUNT(*) OVER () AGENT_COUNT " & _
	"FROM " & _
	"( " & _
		"SELECT " & _
		"DISTINCT " & _
		"OPS_USR_ID, " & _
		"LISTAGG(ERROR_CODE,';') WITHIN GROUP (ORDER BY ERROR_CODE) OVER (PARTITION BY OPS_USR_ID) ERROR_CODE, " & _
		"LISTAGG(ACTION_STATUS,';') WITHIN GROUP (ORDER BY ERROR_CODE) OVER (PARTITION BY OPS_USR_ID) ACTION_STATUS, " & _
		"LISTAGG(ACTION_DATA,';') WITHIN GROUP (ORDER BY ERROR_CODE) OVER (PARTITION BY OPS_USR_ID) ACTION_DATA " & _
		"FROM " & _
		"( " & _
			"SELECT " & _
			"OPS_USR_ID, " & _
			"'LWAV' ERROR_CODE, " & _
			"1 ACTION_STATUS, " & _
			"'0' ACTION_DATA " & _
			"FROM ERROR_DATA " & _
			"WHERE LUNCH_FLAG = 1 " & _
			"UNION ALL " & _
			"SELECT " & _
			"OPS_USR_ID, " & _
			"'OLAP', " & _
			"0, " & _
			"'0' " & _
			"FROM ERROR_DATA " & _
			"WHERE OVERLAP_FLAG = 1 " & _
			"UNION ALL " & _
			"SELECT " & _
			"OPS_USR_ID, " & _
			"'IVLD', " & _
			"0, " & _
			"'0' " & _
			"FROM ERROR_DATA " & _
			"WHERE INVALID_FLAG = 1 " & _
			"UNION ALL " & _			
			"SELECT " & _
			"OPS_SCI_OPS_USR_ID, " & _
			"'BWHC', " & _
			"CASE WHEN CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) > MAX(OPS_SCI_END) THEN 1 ELSE 0 END, " & _
			"'0' " & _
			"FROM OPS_SCHEDULE_INFO " & _
			"JOIN OPS_USER_DETAIL " & _
			"ON OPS_SCI_OPS_USR_ID = OPS_USD_OPS_USR_ID " & _
			"AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 BETWEEN OPS_USD_EFF_DATE AND OPS_USD_DIS_DATE " & _
			"LEFT JOIN OPS_PARAMETER " & _
			"ON OPS_PAR_CODE = 'REDUCED_HOURS' " & _
			"AND " & _
			"( " & _
				"DECODE(OPS_USD_TEAM,'SPT','SPT','SRV','SPT','OSR','SPT','NEW','NEW',OPS_USD_TYPE) = OPS_PAR_PARENT_TYPE " & _
				"OR OPS_PAR_PARENT_TYPE = 'ALL' " & _
			") " & _
			"AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
			"LEFT JOIN SYS_CODE_DETAIL " & _
			"ON SYS_CDD_SYS_CDM_ID = 583 " & _
			"AND SYS_CDD_NAME = OPS_SCI_OPS_USR_ID " & _
			"AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 BETWEEN TO_DATE(REGEXP_SUBSTR(SYS_CDD_VALUE,'[^_]+',1,2),'MM/DD/YYYY') + 1 AND TO_DATE('6/27/2020','MM/DD/YYYY') " & _
			"WHERE OPS_SCI_STATUS = 'APP' " & _
			"AND OPS_SCI_TYPE NOT IN ('LNCH','LNFL') " & _
			"AND TO_DATE(OPS_SCI_START) BETWEEN TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 1 AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 " & _
			"AND " & _
			"( " & _
				"DECODE(OPS_USD_TEAM,'SPT','SPT','SRV','SPT','OSR','SPT','NEW','NEW',OPS_USD_TYPE) = ? " & _
				"OR 'ALL' = ? " & _
			") "
			If PULSE_SECURITY < 5 Then
				SQLErrorDeptFuture = SQLErrorDeptFuture & "AND OPS_USD_TYPE IN ("
				USE_ARRAY = Split(PULSE_DEPARTMENT,",")
				For j = 0 to UBound(USE_ARRAY)
					If j <> UBound(USE_ARRAY) Then
						SQLErrorDeptFuture = SQLErrorDeptFuture & "'" & USE_ARRAY(j) & "',"
					Else
						SQLErrorDeptFuture = SQLErrorDeptFuture & "'" & USE_ARRAY(j) & "') "
					End If
				Next
			End If
			SQLErrorDeptFuture = SQLErrorDeptFuture & "GROUP BY OPS_SCI_OPS_USR_ID, OPS_USD_SCH_HOURS, OPS_PAR_VALUE, SYS_CDD_ID " & _
			"HAVING " & _
			"( " & _
				"CASE WHEN OPS_PAR_VALUE IS NOT NULL AND SYS_CDD_ID IS NULL AND ROUND(SUM(DECODE(REGEXP_INSTR(OPS_SCI_TYPE,'SLIP|MLUN'),0,0,24*(OPS_SCI_END-OPS_SCI_START))),1) = 0 THEN OPS_PAR_VALUE*OPS_USD_SCH_HOURS - ROUND(24*SUM(OPS_SCI_END-OPS_SCI_START),2) END <> 0 " & _
				"OR CASE WHEN OPS_PAR_VALUE IS NOT NULL AND SYS_CDD_ID IS NOT NULL THEN OPS_USD_SCH_HOURS - ROUND(24*SUM(OPS_SCI_END-OPS_SCI_START),2) END <> 0 " & _
				"OR CASE WHEN OPS_PAR_VALUE IS NULL THEN OPS_USD_SCH_HOURS - ROUND(24*SUM(OPS_SCI_END-OPS_SCI_START),2) END > 0 " & _
			") " & _
		") " & _
		"LEFT JOIN " & _
		"( " & _
			"SELECT " & _
			"TO_NUMBER(TRIM(REGEXP_SUBSTR(RES_DLN_TEXT,'[^-]+',1,1))) NOTE_USR_ID, " & _
			"TRIM(RES_DLN_TYPE) NOTE_CODE " & _
			"FROM RES_DAILY_STATS_NOTES " & _
			"WHERE RES_DLN_DATE = TO_DATE(?,'MM/DD/YYYY') " & _
			"AND TRIM(RES_DLN_TYPE) IN ('LWAV','OLAP','IVLD') " & _
			"UNION ALL " & _
			"SELECT " & _
			"TO_NUMBER(TRIM(REGEXP_SUBSTR(RES_DLN_TEXT,'[^-]+',1,1))), " & _
			"'BWHC' " & _
			"FROM RES_DAILY_STATS_NOTES " & _
			"WHERE RES_DLN_DATE BETWEEN TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 1 AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 " & _
			"AND TRIM(RES_DLN_TYPE) = 'BWHC' " & _		
		") " & _
		"ON OPS_USR_ID = NOTE_USR_ID " & _
		"AND ERROR_CODE = NOTE_CODE " & _
		"WHERE NOTE_CODE IS NULL " & _
	")ERROR " & _
	"JOIN OPS_USER_DETAIL " & _
	"ON ERROR.OPS_USR_ID = OPS_USD_OPS_USR_ID " & _
	"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_USD_EFF_DATE AND OPS_USD_DIS_DATE " & _
	"JOIN OPS_USER AGT " & _
	"ON ERROR.OPS_USR_ID = AGT.OPS_USR_ID " & _
	"JOIN OPS_USER SUP " & _
	"ON OPS_USD_SUPERVISOR = SUP.OPS_USR_ID " & _
	"LEFT JOIN " & _
	"( " & _
		"SELECT " & _
		"RES_RTE_OPS_USR_ID, " & _
		"MAX(DECODE(RES_RTE_RES_RTG_ID,0,NULL,RES_RTE_RES_RTG_ID)) KEEP (DENSE_RANK LAST ORDER BY RTE_ORDERING) RES_RTE_RES_RTG_ID " & _
		"FROM " & _
		"( " & _
			"SELECT " & _
			"RES_RTE_OPS_USR_ID, " & _
			"DECODE(RES_RTE_RES_RTG_ID,2,1,3,1,RES_RTE_RES_RTG_ID) RES_RTE_RES_RTG_ID, " & _
			"1 RTE_ORDERING " & _
			"FROM RES_ROUTING " & _
			"WHERE RES_RTE_YEAR = TO_CHAR(CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE)-(6/24),'YYYY') " & _
			"AND RES_RTE_MONTH = TO_CHAR(CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE)-(6/24),'MM') " & _
			"UNION ALL " & _
			"SELECT TO_NUMBER(SYS_CDD_NAME), " & _
			"DECODE(TO_NUMBER(REGEXP_SUBSTR(SYS_CDD_VALUE,'[^;]+',1,2)),2,1,3,1,TO_NUMBER(REGEXP_SUBSTR(SYS_CDD_VALUE,'[^;]+',1,2))), " & _
			"2 " & _
			"FROM SYS_CODE_DETAIL " & _
			"WHERE SYS_CDD_SYS_CDM_ID = 508 " & _
			"AND TO_DATE(?,'MM/DD/YYYY') >= TO_DATE(REGEXP_SUBSTR(SYS_CDD_VALUE,'[^;]+',1,1),'MM/DD/YYYY') " & _
			"AND TO_DATE(REGEXP_SUBSTR(SYS_CDD_VALUE,'[^;]+',1,1),'MM/DD/YYYY') >= TO_DATE(CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE)) " & _
			"UNION ALL " & _
			"SELECT " & _
			"RES_STA_OPS_USR_ID, " & _
			"DECODE(RES_STA_RES_RTD_ID,2,1,3,1,RES_STA_RES_RTD_ID) RES_STA_RES_RTD_ID, " & _
			"2 " & _
			"FROM RES_STATS_INCENTIVE " & _
			"WHERE RES_STA_DATE = TO_DATE(?,'MM/DD/YYYY') " & _
		") " & _
		"GROUP BY RES_RTE_OPS_USR_ID " & _
	") " & _
	"ON ERROR.OPS_USR_ID = RES_RTE_OPS_USR_ID " & _
	"LEFT JOIN " & _
	"( " & _
		"SELECT " & _
		"OPS_ASN_OPS_USR_ID, " & _
		"MAX(OPS_ASN_OPS_ASM_ID) OPS_ASN_OPS_ASM_ID " & _
		"FROM OPS_ASSIGNMENT " & _
		"WHERE OPS_ASN_OPS_ASM_ID IN (1,2,3,4,5,39,40,41,43,45,50) " & _
		"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_ASN_EFF_DATE AND OPS_ASN_DIS_DATE " & _
		"GROUP BY OPS_ASN_OPS_USR_ID " & _
	") " & _
	"ON ERROR.OPS_USR_ID = OPS_ASN_OPS_USR_ID " & _
	"LEFT JOIN " & _
	"( " & _
		"SELECT DISTINCT TO_NUMBER(TRIM(REGEXP_SUBSTR(RES_DLN_TEXT,'[^-]+',1,1))) NOTE_USR_ID " & _
		"FROM RES_DAILY_STATS_NOTES " & _
		"WHERE " & _
		"( " & _
			"( " & _
				"RES_DLN_DATE = TO_DATE(?,'MM/DD/YYYY') " & _
				"AND " & _
				"( " & _
					"TRIM(RES_DLN_TYPE) IN ('LATE','FLEX','SHFT','STRT','END','NFLX','OFLX','GAP','LMIN','OLAP','IVLD','ABS','FWP','OTH','OUT','WFH','NA') " & _
					"OR " & _
					"( " & _
						"TRIM(RES_DLN_TYPE) = 'LWAV' " & _
						"AND DECODE(INSTR(RES_DLN_TEXT,'-'),0,NULL,TRIM(SUBSTR(RES_DLN_TEXT,INSTR(RES_DLN_TEXT,'-')+1))) IS NOT NULL " & _
					") " & _
				") " & _
			") " & _
			"OR " & _
			"( " & _
				"RES_DLN_DATE BETWEEN TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 1 AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 " & _
				"AND TRIM(RES_DLN_TYPE) = 'BWHC' " & _
			") " & _
		") " & _
	") " & _
	"ON ERROR.OPS_USR_ID = NOTE_USR_ID " & _
	"LEFT JOIN " & _
	"( " & _
		"SELECT DISTINCT TO_NUMBER(TRIM(REGEXP_SUBSTR(RES_DLN_TEXT,'[^-]+',1,1))) WAIVER_USR_ID " & _
		"FROM RES_DAILY_STATS_NOTES " & _
		"WHERE RES_DLN_DATE = TO_DATE(?,'MM/DD/YYYY') " & _
		"AND TRIM(RES_DLN_TYPE) = 'LWAV' " & _
	") " & _
	"ON ERROR.OPS_USR_ID = WAIVER_USR_ID " & _
	"WHERE OPS_USD_CLASS IN ('RGFT','RGPT','PT<30','LEAVE') " & _
	"AND OPS_USD_LOCATION IN ('MOT','WFD','WFH') " & _
	"AND OPS_USD_PAY_RATE > 0 " & _
	"ORDER BY AGT.OPS_USR_NAME"
	
	SQLErrorAgt = "WITH ERROR_DATA AS " & _
	"( " & _
		"SELECT " & _
		"NVL(SCI_DEPARTMENT,ATT_DEPARTMENT) USE_DEPARTMENT, " & _
		"NVL(SCI_INTERVAL,ATT_INTERVAL) USE_INTERVAL, " & _
		"OPS_SCI_TYPE, " & _
		"LOGIN_FLAG, " & _
		"MAX(ACTUAL_LOGIN) OVER () ACTUAL_LOGIN, " & _
		"MAX(ACTUAL_LOGOUT) OVER () ACTUAL_LOGOUT, " & _
		"MAX(FIRST_TYPE) OVER () FIRST_TYPE, " & _
		"MAX(LAST_TYPE) OVER () LAST_TYPE, " & _
		"MAX(SCI_MIN) OVER () SCI_MIN, " & _
		"MAX(SCI_MAX) OVER () SCI_MAX, " & _
		"MIN(CASE WHEN OPS_SCI_TYPE IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') THEN NVL(SCI_INTERVAL,ATT_INTERVAL) END) OVER () WORK_START, " & _
        	"MAX(CASE WHEN OPS_SCI_TYPE IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') THEN NVL(SCI_INTERVAL,ATT_INTERVAL) END) OVER () WORK_END, " & _
        	"MIN(CASE WHEN LOGIN_FLAG = 1 THEN NVL(SCI_INTERVAL,ATT_INTERVAL) END) OVER () LOGIN_START, " & _
        	"MAX(CASE WHEN LOGIN_FLAG = 1 THEN NVL(SCI_INTERVAL,ATT_INTERVAL) END) OVER () LOGIN_END, " & _
		"NVL(MAX(WORK_HOURS) OVER (),0) WORK_HOURS, " & _
		"MAX(LUNCH_FLAG) OVER () LUNCH_FLAG, " & _
		"MAX(OVERLAP_FLAG) OVER () OVERLAP_FLAG, " & _
		"MAX(INVALID_FLAG) OVER () INVALID_FLAG, " & _
		"NVL(WORKGROUP_OPEN,DEPARTMENT_OPEN) DEPARTMENT_OPEN, " & _
		"DEPARTMENT_CLOSED, " & _
		"MAX(CASE " & _
			"WHEN " & _
			"( " & _
				"FIRST_TYPE IN ('PICK','HOLW','BASE','WFHU','EXTD','ADDT') " & _
				"OR " & _
				"( " & _
					"FIRST_TYPE = 'PROJ' " & _
					"AND REGEXP_INSTR(UPPER(FIRST_NOTE),'MESSAG|CHAT') > 0 " & _
				") " & _
			") " & _
			"AND " & _
			"( " & _
				"LAST_TYPE IN ('PICK','HOLW','BASE','WFHU','EXTD','ADDT') " & _
				"OR " & _
				"( " & _
					"LAST_TYPE = 'PROJ' " & _
					"AND REGEXP_INSTR(UPPER(LAST_NOTE),'MESSAG|CHAT') > 0 " & _
				") " & _
			") " & _
			"AND (TO_CHAR(SCI_MIN,'HH24:MI') > NVL(WORKGROUP_OPEN,DEPARTMENT_OPEN) OR NVL(WORKGROUP_OPEN,DEPARTMENT_OPEN) IS NULL) " & _
			"AND (REPLACE(TO_CHAR(SCI_MAX,'HH24:MI'),'00:00','23:59') < DEPARTMENT_CLOSED OR DEPARTMENT_CLOSED IS NULL) " & _
			"AND 1440*(NVL(OFF_MIN,SCI_MAX) - SCI_MIN) > 30 AND 1440*(SCI_MAX - NVL(OFF_MAX,SCI_MIN)) > 30 " & _
		"THEN TO_NUMBER(FLEX_LENGTH) " & _
		"ELSE 0 " & _
		"END) OVER () FLEX_LENGTH, " & _
		"NVL(SCI_INTERVAL_LENGTH,ATT_INTERVAL_LENGTH) INTERVAL_LENGTH " & _
		"FROM " & _
		"( " & _
			"SELECT " & _
			"SCI_DEPARTMENT, " & _
			"SCI_TEAM, " & _
			"SCI_INTERVAL_LENGTH, " & _
			"SCI_INTERVAL, " & _
			"OPS_SCI_TYPE, " & _
			"FIRST_TYPE, " & _
			"FIRST_NOTE, " & _
			"LAST_TYPE, " & _
			"LAST_NOTE, " & _
			"SCI_MIN, " & _
			"SCI_MAX, " & _
			"WORK_HOURS, " & _
			"LUNCH_FLAG, " & _
			"OVERLAP_FLAG, " & _
			"INVALID_FLAG, " & _
			"MIN(CASE WHEN DECODE(REGEXP_INSTR(OPS_SCI_TYPE,'^VAC|UN$|PT$|PP$|HOLU|SLIP|RESH|JURY|BRVT'),0,OPS_SCI_TYPE,NULL) IS NULL THEN SCI_INTERVAL END) OVER () OFF_MIN, " & _
			"MAX(CASE WHEN DECODE(REGEXP_INSTR(OPS_SCI_TYPE,'^VAC|UN$|PT$|PP$|HOLU|SLIP|RESH|JURY|BRVT'),0,OPS_SCI_TYPE,NULL) IS NULL THEN SCI_INTERVAL END) OVER () + (SCI_INTERVAL_LENGTH/1440) OFF_MAX " & _
			"FROM " & _
			"( " & _
				"SELECT " & _
				"SCI_DEPARTMENT, " & _
				"SCI_TEAM, " & _
				"SCI_INTERVAL_LENGTH, " & _
				"SCI_INTERVAL, " & _
				"MAX(CASE WHEN SCI_INTERVAL BETWEEN OPS_SCI_START AND OPS_SCI_END - (1/1440) THEN OPS_SCI_TYPE END) OPS_SCI_TYPE, " & _
				"FIRST_TYPE, " & _
				"FIRST_NOTE, " & _
				"LAST_TYPE, " & _
				"LAST_NOTE, " & _
				"SCI_MIN, " & _
				"SCI_MAX, " & _
				"WORK_HOURS, " & _
				"CASE WHEN WORK_HOURS > 5 AND LUNCH_FLAG IS NULL THEN 1 END LUNCH_FLAG, " & _
				"MAX(OVERLAP_FLAG) OVERLAP_FLAG, " & _
				"MAX(INVALID_FLAG) INVALID_FLAG " & _
				"FROM " & _
				"( " & _
					"SELECT " & _
					"DECODE(OPS_USD_TEAM,'SPT','SPT','SRV','SPT','OSR','SPT',OPS_USD_TYPE) SCI_DEPARTMENT, " & _
					"DECODE(OPS_USD_TYPE,'GRP',OPS_USD_JOB,OPS_USD_TEAM) SCI_TEAM, " & _
					"OPS_SCI_START, " & _
					"OPS_SCI_END, " & _
					"OPS_SCI_TYPE, " & _
					"MAX(OPS_SCI_TYPE) KEEP (DENSE_RANK FIRST ORDER BY OPS_SCI_START, OPS_SCI_END) OVER () FIRST_TYPE, " & _
					"MAX(OPS_SCI_NOTES) KEEP (DENSE_RANK FIRST ORDER BY OPS_SCI_START, OPS_SCI_END) OVER () FIRST_NOTE, " & _
					"MAX(OPS_SCI_TYPE) KEEP (DENSE_RANK LAST ORDER BY OPS_SCI_START, OPS_SCI_END) OVER () LAST_TYPE, " & _
					"MAX(OPS_SCI_NOTES) KEEP (DENSE_RANK LAST ORDER BY OPS_SCI_START, OPS_SCI_END) OVER () LAST_NOTE, " & _
					"MIN(OPS_SCI_START) OVER () SCI_MIN, " & _
					"MAX(OPS_SCI_END) OVER () SCI_MAX, " & _
					"ROUND(24*SUM(CASE WHEN OPS_SCI_TYPE IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') THEN OPS_SCI_END - OPS_SCI_START ELSE 0 END) OVER (),2) WORK_HOURS, " & _
					"MAX(CASE WHEN OPS_SCI_TYPE IN ('LNCH','LNFL') THEN 1 END) OVER () LUNCH_FLAG, " & _
					"CASE " & _
						"WHEN OPS_SCI_START < LEAD(OPS_SCI_END) OVER (ORDER BY OPS_SCI_START) " & _
						"AND OPS_SCI_END > LEAD(OPS_SCI_START) OVER (ORDER BY OPS_SCI_START) " & _
						"THEN 1 " & _
					"END OVERLAP_FLAG, " & _
					"CASE WHEN OPS_SCI_START > OPS_SCI_END THEN 1 END INVALID_FLAG " & _
					"FROM OPS_SCHEDULE_INFO " & _
					"JOIN OPS_USER_DETAIL " & _
					"ON OPS_SCI_OPS_USR_ID = OPS_USD_OPS_USR_ID " & _
					"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_USD_EFF_DATE AND OPS_USD_DIS_DATE " & _
					"WHERE TO_DATE(OPS_SCI_START) = TO_DATE(?,'MM/DD/YYYY') " & _
					"AND OPS_SCI_STATUS = 'APP' " & _
					"AND OPS_SCI_START <> OPS_SCI_END " & _
					"AND OPS_SCI_TYPE NOT LIKE 'HOL_' " & _
					"AND OPS_SCI_OPS_USR_ID = ? " & _
				") " & _
				"JOIN " & _
				"( " & _
					"SELECT * " & _
					"FROM " & _
					"( " & _
						"SELECT " & _
						"INTERVAL_LENGTH SCI_INTERVAL_LENGTH, " & _
						"TO_DATE(?,'MM/DD/YYYY') + (INTERVAL_LENGTH * (ROWNUM - 1))/1440 SCI_INTERVAL " & _
						"FROM " & _
						"( " & _
							"SELECT " & _
							"NVL(MAX(TO_NUMBER(OPS_PAR_VALUE)),6) INTERVAL_LENGTH " & _
							"FROM OPS_PARAMETER " & _
							"WHERE OPS_PAR_PARENT_TYPE = 'STF' " & _
							"AND OPS_PAR_CODE = 'INTERVAL_LENGTH' " & _
							"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
						") " & _
						"CONNECT BY ROWNUM < (1440/INTERVAL_LENGTH) + 1 " & _
					") " & _
				") " & _
				"ON SCI_INTERVAL BETWEEN SCI_MIN AND SCI_MAX - (1/1440) " & _
				"GROUP BY SCI_DEPARTMENT, SCI_TEAM, SCI_INTERVAL_LENGTH, SCI_INTERVAL, FIRST_TYPE, FIRST_NOTE, LAST_TYPE, LAST_NOTE, SCI_MIN, SCI_MAX, WORK_HOURS, CASE WHEN WORK_HOURS > 5 AND LUNCH_FLAG IS NULL THEN 1 END " & _
			") " & _
		") " & _
		"FULL OUTER JOIN " & _
		"( " & _
			"SELECT " & _
			"DISTINCT " & _
			"ATT_DEPARTMENT, " & _
			"ATT_TEAM, " & _
			"ATT_INTERVAL_LENGTH, " & _
			"ATT_INTERVAL, " & _
			"1 LOGIN_FLAG, " & _
			"ACTUAL_LOGIN, " & _
			"ACTUAL_LOGOUT " & _
			"FROM " & _
			"( " & _
				"SELECT " & _
				"DECODE(OPS_USD_TEAM,'SPT','SPT','SRV','SPT','OSR','SPT',OPS_USD_TYPE) ATT_DEPARTMENT, " & _
				"DECODE(OPS_USD_TYPE,'GRP',OPS_USD_JOB,OPS_USD_TEAM) ATT_TEAM, " & _
				"TO_DATE(OPS_ATT_DATE || ' ' || OPS_ATT_ADJ_LOGIN,'MM/DD/YYYY HH24:MI') OPS_ATT_ADJ_LOGIN, " & _
				"TO_DATE(OPS_ATT_DATE + CASE WHEN OPS_ATT_ADJ_LOGIN > OPS_ATT_ADJ_LOGOUT THEN 1 ELSE 0 END || ' ' || OPS_ATT_ADJ_LOGOUT,'MM/DD/YYYY HH24:MI') OPS_ATT_ADJ_LOGOUT, " & _
				"MIN(TO_DATE(OPS_ATT_DATE || ' ' || OPS_ATT_ACT_LOGIN,'MM/DD/YYYY HH24:MI')) OVER () ACTUAL_LOGIN, " & _
				"MAX(TO_DATE(OPS_ATT_DATE + CASE WHEN OPS_ATT_ACT_LOGIN > OPS_ATT_ACT_LOGOUT THEN 1 ELSE 0 END || ' ' || OPS_ATT_ACT_LOGOUT,'MM/DD/YYYY HH24:MI')) OVER () ACTUAL_LOGOUT " & _
				"FROM OPS_ATTENDANCE " & _
				"JOIN OPS_USER_DETAIL " & _
				"ON OPS_ATT_OPS_USR_ID = OPS_USD_OPS_USR_ID " & _
				"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_USD_EFF_DATE AND OPS_USD_DIS_DATE " & _
				"WHERE OPS_ATT_DATE = TO_DATE(?,'MM/DD/YYYY') " & _
				"AND OPS_ATT_TYPE = 'RES' " & _
				"AND OPS_ATT_ADJ_LOGIN <> OPS_ATT_ADJ_LOGOUT " & _
				"AND OPS_ATT_OPS_USR_ID = ? " & _
			") " & _
			"JOIN " & _
			"( " & _
				"SELECT * " & _
				"FROM " & _
				"( " & _
					"SELECT " & _
					"INTERVAL_LENGTH ATT_INTERVAL_LENGTH, " & _
					"TO_DATE(?,'MM/DD/YYYY') + (INTERVAL_LENGTH * (ROWNUM - 1))/1440 ATT_INTERVAL " & _
					"FROM " & _
					"( " & _
						"SELECT " & _
						"NVL(MAX(TO_NUMBER(OPS_PAR_VALUE)),6) INTERVAL_LENGTH " & _
						"FROM OPS_PARAMETER " & _
						"WHERE OPS_PAR_PARENT_TYPE = 'STF' " & _
						"AND OPS_PAR_CODE = 'INTERVAL_LENGTH' " & _
						"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
					") " & _
					"CONNECT BY ROWNUM < (1440/INTERVAL_LENGTH) + 1 " & _
				") " & _
				"WHERE ATT_INTERVAL < CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) " & _
			") " & _
			"ON ATT_INTERVAL BETWEEN OPS_ATT_ADJ_LOGIN AND OPS_ATT_ADJ_LOGOUT - (1/1440) " & _
		") " & _
		"ON SCI_INTERVAL = ATT_INTERVAL " & _
		"LEFT JOIN " & _
		"( " & _
			"SELECT OPS_PAR_PARENT_TYPE USE_DEPARTMENT, OPS_PAR_VALUE DEPARTMENT_OPEN " & _
			"FROM OPS_PARAMETER " & _
			"WHERE OPS_PAR_CODE = 'DEPARTMENT_OPEN' " & _
			"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
		")DO " & _
		"ON NVL(SCI_DEPARTMENT,ATT_DEPARTMENT) = DO.USE_DEPARTMENT " & _
		"LEFT JOIN " & _
		"( " & _
			"SELECT OPS_PAR_PARENT_TYPE USE_WORKGROUP, OPS_PAR_VALUE WORKGROUP_OPEN " & _
			"FROM OPS_PARAMETER " & _
			"WHERE OPS_PAR_CODE = 'WORKGROUP_OPEN' " & _
			"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
		")WO " & _
		"ON NVL(SCI_TEAM,ATT_TEAM) = WO.USE_WORKGROUP " & _
		"LEFT JOIN " & _
		"( " & _
			"SELECT OPS_PAR_PARENT_TYPE USE_DEPARTMENT, OPS_PAR_VALUE DEPARTMENT_CLOSED " & _
			"FROM OPS_PARAMETER " & _
			"WHERE OPS_PAR_CODE = 'DEPARTMENT_CLOSED' " & _
			"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
		")DC " & _
		"ON NVL(SCI_DEPARTMENT,ATT_DEPARTMENT) = DC.USE_DEPARTMENT " & _
		"LEFT JOIN " & _
		"( " & _
			"SELECT OPS_PAR_PARENT_TYPE USE_DEPARTMENT, OPS_PAR_VALUE FLEX_LENGTH " & _
			"FROM OPS_PARAMETER " & _
			"WHERE OPS_PAR_CODE = 'FLEX_LENGTH' " & _
			"AND TO_DATE(?,'MM/DD/YYYY') BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
		")FL " & _
		"ON NVL(SCI_DEPARTMENT,ATT_DEPARTMENT) = FL.USE_DEPARTMENT " & _
	") " & _
	"SELECT " & _
	"DISTINCT " & _
	"LISTAGG(ERROR_CODE,';') WITHIN GROUP (ORDER BY ERROR_CODE) OVER () ERROR_CODE, " & _
	"LISTAGG(ACTION_STATUS,';') WITHIN GROUP (ORDER BY ERROR_CODE) OVER () ACTION_STATUS, " & _
	"LISTAGG(ACTION_DATA,';') WITHIN GROUP (ORDER BY ERROR_CODE) OVER () ACTION_DATA " & _
	"FROM " & _
	"( " & _
		"SELECT DISTINCT " & _
		"ERROR_CODE, " & _
		"1 ACTION_STATUS, " & _
		"ACTION_DATA " & _
		"FROM " & _
		"( " & _
			"SELECT " & _
			"CASE " & _
				"WHEN CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) > WORK_START + ((FLEX_LENGTH + (INTERVAL_LENGTH + 12))/1440) AND ACTUAL_LOGIN IS NULL THEN 'LATE' " & _
				"WHEN DECODE(FLEX_LENGTH,0,LOGIN_START,ACTUAL_LOGIN) > WORK_START + (FLEX_LENGTH/1440) OR DECODE(FLEX_LENGTH,0,LOGIN_START,ACTUAL_LOGIN) < WORK_START - (FLEX_LENGTH/1440) THEN 'FLEX' " & _
				"WHEN WORK_START <> LOGIN_START THEN 'STRT' " & _
				"WHEN ACTUAL_LOGIN > WORK_START AND FIRST_TYPE = 'NEWH' THEN 'NFLX' " & _
				"WHEN TO_CHAR(WORK_START,'HH24:MI') = DEPARTMENT_OPEN AND TO_CHAR(ACTUAL_LOGIN,'HH24:MI') > DEPARTMENT_OPEN THEN 'OFLX' " & _
				"WHEN ACTUAL_LOGIN IS NOT NULL AND WORK_HOURS = 0 AND (NVL(FIRST_TYPE,'NA') <> 'WFHU' OR NVL(LAST_TYPE,'NA') <> 'WFHU') THEN 'SHFT' " & _
			"END ERROR_CODE, " & _
			"CASE " & _
				"WHEN CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) > WORK_START + ((FLEX_LENGTH + (INTERVAL_LENGTH + 12))/1440) AND ACTUAL_LOGIN IS NULL THEN '0' " & _
				"WHEN DECODE(FLEX_LENGTH,0,LOGIN_START,ACTUAL_LOGIN) > WORK_START + (FLEX_LENGTH/1440) OR DECODE(FLEX_LENGTH,0,LOGIN_START,ACTUAL_LOGIN) < WORK_START - (FLEX_LENGTH/1440) THEN '0' " & _
				"WHEN WORK_START <> LOGIN_START THEN TO_CHAR(LOGIN_START,'HH24:MI') " & _
				"ELSE '0' " & _
			"END ACTION_DATA " & _
			"FROM ERROR_DATA " & _
		") " & _
		"WHERE ERROR_CODE IS NOT NULL " & _
		"UNION ALL " & _
		"SELECT DISTINCT " & _
		"'END', " & _
		"1, " & _
		"'0' " & _
		"FROM ERROR_DATA " & _
		"WHERE LOGIN_END <> WORK_END " & _
		"AND CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) > WORK_END + ((INTERVAL_LENGTH + 12)/1440) " & _
		"UNION ALL " & _
		"SELECT DISTINCT " & _
		"'GAP', " & _
		"CASE WHEN CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) > SCI_MAX THEN 1 ELSE 0 END, " & _
		"'0' " & _
		"FROM " & _
		"( " & _
			"SELECT " & _
			"USE_INTERVAL, " & _
			"WORK_START, " & _
			"WORK_END, " & _
			"SCI_MAX, " & _
			"GAP_FLAG, " & _
			"NVL(LAST_VALUE(NVL2(GAP_FLAG,NULL,USE_INTERVAL + (INTERVAL_LENGTH/1440)) IGNORE NULLS) OVER (ORDER BY USE_INTERVAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),SCI_MIN) GAP_START, " & _
			"NVL(FIRST_VALUE(NVL2(GAP_FLAG,NULL,USE_INTERVAL - (INTERVAL_LENGTH/1440)) IGNORE NULLS) OVER (ORDER BY USE_INTERVAL ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING),SCI_MAX) GAP_END " & _
			"FROM " & _
			"( " & _
				"SELECT " & _
				"USE_INTERVAL, " & _
				"INTERVAL_LENGTH, " & _
				"WORK_START, " & _
				"WORK_END, " & _
				"SCI_MIN, " & _
				"SCI_MAX, " & _
				"CASE " & _
					"WHEN CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) > USE_INTERVAL + ((INTERVAL_LENGTH + 12)/1440) " & _
					"AND " & _
					"( " & _
						"( " & _
							"OPS_SCI_TYPE IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') " & _
							"AND LOGIN_FLAG IS NULL " & _
						") " & _
						"OR " & _
						"(" & _
							"OPS_SCI_TYPE IN ('LNCH','LNFL','LLPT','LLUN') " & _
							"AND LAST_VALUE(DECODE(OPS_SCI_TYPE,NULL,'NULL','LNCH',NULL,'LNFL',NULL,'LLPT',NULL,'LLUN',NULL,OPS_SCI_TYPE) IGNORE NULLS) OVER (ORDER BY USE_INTERVAL ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING) IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') " & _
							"AND FIRST_VALUE(DECODE(OPS_SCI_TYPE,NULL,'NULL','LNCH',NULL,'LNFL',NULL,'LLPT',NULL,'LLUN',NULL,OPS_SCI_TYPE) IGNORE NULLS) OVER (ORDER BY USE_INTERVAL ROWS BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING) IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') " & _
							"AND LOGIN_FLAG IS NULL " & _
						") " & _						
						"OR " & _
						"( " & _
							"NVL(OPS_SCI_TYPE,'NA') NOT IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ','WFHU','OTRG','LNCH','LNFL','LLPT','LLUN') " & _
							"AND LOGIN_FLAG = 1 " & _
						") " & _
						"OR " & _
						"(" & _
							"OPS_SCI_TYPE IN ('LNCH','LNFL','LLPT','LLUN') " & _
							"AND NOT " & _
							"( " & _
								"LAST_VALUE(DECODE(OPS_SCI_TYPE,NULL,'NULL','LNCH',NULL,'LNFL',NULL,'LLPT',NULL,'LLUN',NULL,OPS_SCI_TYPE) IGNORE NULLS) OVER (ORDER BY USE_INTERVAL ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING) IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') " & _
								"AND FIRST_VALUE(DECODE(OPS_SCI_TYPE,NULL,'NULL','LNCH',NULL,'LNFL',NULL,'LLPT',NULL,'LLUN',NULL,OPS_SCI_TYPE) IGNORE NULLS) OVER (ORDER BY USE_INTERVAL ROWS BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING) IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') " & _
							") " & _
							"AND LOGIN_FLAG = 1 " & _
						") " & _
					") " & _
					"THEN 1 " & _
				"END GAP_FLAG " & _
				"FROM ERROR_DATA " & _
				"WHERE ACTUAL_LOGIN IS NOT NULL " & _
			") " & _
		") " & _
		"WHERE GAP_FLAG = 1 " & _
		"AND GAP_END < WORK_END " & _
		"AND GAP_START > WORK_START " & _
		"UNION ALL " & _
		"SELECT " & _
		"DISTINCT " & _
		"'LWAV', " & _
		"1, " & _
		"'0' " & _
		"FROM ERROR_DATA " & _
		"WHERE LUNCH_FLAG = 1 " & _
		"UNION ALL " & _
		"SELECT " & _
		"'LMIN', " & _
		"1, " & _
		"'0' " & _
		"FROM " & _
		"( " & _
			"SELECT " & _
			"SUM(LUNCH_MINUTES) SCHEDULE_LUNCH " & _
			"FROM " & _
			"( " & _
				"SELECT " & _
				"CASE " & _
					"WHEN " & _
						"OPS_SCI_TYPE IN ('LNCH','LNFL','LLPT','LLUN') " & _
						"AND LAST_VALUE(DECODE(OPS_SCI_TYPE,NULL,'NULL','LNCH',NULL,'LNFL',NULL,'LLPT',NULL,'LLUN',NULL,OPS_SCI_TYPE) IGNORE NULLS) OVER (ORDER BY USE_INTERVAL ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING) IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') " & _
						"AND FIRST_VALUE(DECODE(OPS_SCI_TYPE,NULL,'NULL','LNCH',NULL,'LNFL',NULL,'LLPT',NULL,'LLUN',NULL,OPS_SCI_TYPE) IGNORE NULLS) OVER (ORDER BY USE_INTERVAL ROWS BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING) IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') " & _
					"THEN INTERVAL_LENGTH " & _
					"ELSE 0 " & _
				"END LUNCH_MINUTES " & _
				"FROM ERROR_DATA " & _
			") " & _
		") " & _
		"CROSS JOIN " & _
		"( " & _
			"SELECT " & _
			"NVL(ROUND(RES_PHN_HOURS/60),0) SWITCH_LUNCH " & _
			"FROM RES_PHONE_STATS " & _
			"WHERE RES_PHN_TYPE = 'LUN' " & _
			"AND RES_PHN_DATE = TO_DATE(?,'MM/DD/YYYY') " & _
			"AND RES_PHN_OPS_USR_ID = ? " & _
		") " & _
		"WHERE SWITCH_LUNCH - SCHEDULE_LUNCH NOT BETWEEN -3 AND 2 " & _
		"UNION ALL " & _
		"SELECT " & _
		"DISTINCT " & _
		"'OLAP', " & _
		"0, " & _
		"'0' " & _
		"FROM ERROR_DATA " & _
		"WHERE OVERLAP_FLAG = 1 " & _
		"UNION ALL " & _
		"SELECT " & _
		"DISTINCT " & _
		"'IVLD', " & _
		"0, " & _
		"'0' " & _
		"FROM ERROR_DATA " & _
		"WHERE INVALID_FLAG = 1 " & _
		"UNION ALL " & _			
		"SELECT " & _
		"'BWHC', " & _
		"CASE WHEN CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) > MAX(OPS_SCI_END) THEN 1 ELSE 0 END, " & _
		"'0' " & _
		"FROM OPS_SCHEDULE_INFO " & _
		"JOIN OPS_USER_DETAIL " & _
		"ON OPS_SCI_OPS_USR_ID = OPS_USD_OPS_USR_ID " & _
		"AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 BETWEEN OPS_USD_EFF_DATE AND OPS_USD_DIS_DATE " & _
		"LEFT JOIN OPS_PARAMETER " & _
		"ON OPS_PAR_CODE = 'REDUCED_HOURS' " & _
		"AND " & _
		"( " & _
			"DECODE(OPS_USD_TEAM,'SPT','SPT','SRV','SPT','OSR','SPT','NEW','NEW',OPS_USD_TYPE) = OPS_PAR_PARENT_TYPE " & _
			"OR OPS_PAR_PARENT_TYPE = 'ALL' " & _
		") " & _
		"AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
		"LEFT JOIN SYS_CODE_DETAIL " & _
		"ON SYS_CDD_SYS_CDM_ID = 583 " & _
		"AND SYS_CDD_NAME = OPS_SCI_OPS_USR_ID " & _
		"AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 BETWEEN TO_DATE(REGEXP_SUBSTR(SYS_CDD_VALUE,'[^_]+',1,2),'MM/DD/YYYY') + 1 AND TO_DATE('6/27/2020','MM/DD/YYYY') " & _
		"WHERE OPS_SCI_STATUS = 'APP' " & _
		"AND OPS_SCI_TYPE NOT IN ('LNCH','LNFL') " & _
		"AND TO_DATE(OPS_SCI_START) BETWEEN TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 1 AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 " & _
		"AND OPS_SCI_OPS_USR_ID = ? " & _
		"GROUP BY OPS_USD_SCH_HOURS, OPS_PAR_VALUE, SYS_CDD_ID " & _
		"HAVING " & _
		"( " & _
			"CASE WHEN OPS_PAR_VALUE IS NOT NULL AND SYS_CDD_ID IS NULL AND ROUND(SUM(DECODE(REGEXP_INSTR(OPS_SCI_TYPE,'SLIP|MLUN'),0,0,24*(OPS_SCI_END-OPS_SCI_START))),1) = 0 THEN OPS_PAR_VALUE*OPS_USD_SCH_HOURS - ROUND(24*SUM(OPS_SCI_END-OPS_SCI_START),2) END <> 0 " & _
			"OR CASE WHEN OPS_PAR_VALUE IS NOT NULL AND SYS_CDD_ID IS NOT NULL THEN OPS_USD_SCH_HOURS - ROUND(24*SUM(OPS_SCI_END-OPS_SCI_START),2) END <> 0 " & _
			"OR CASE WHEN OPS_PAR_VALUE IS NULL THEN OPS_USD_SCH_HOURS - ROUND(24*SUM(OPS_SCI_END-OPS_SCI_START),2) END > 0 " & _
		") " & _
	") " & _
	"LEFT JOIN " & _
	"( " & _
		"SELECT " & _
		"TRIM(RES_DLN_TYPE) NOTE_CODE " & _
		"FROM RES_DAILY_STATS_NOTES " & _
		"WHERE RES_DLN_DATE = TO_DATE(?,'MM/DD/YYYY') " & _
		"AND TRIM(REGEXP_SUBSTR(RES_DLN_TEXT,'[^-]+',1,1)) = ? " & _
		"AND TRIM(RES_DLN_TYPE) IN ('LATE','FLEX','SHFT','STRT','END','NFLX','OFLX','GAP','LMIN','LWAV','OLAP','IVLD') " & _
		"UNION ALL " & _
		"SELECT " & _
		"'BWHC' " & _
		"FROM RES_DAILY_STATS_NOTES " & _
		"WHERE RES_DLN_DATE BETWEEN TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 1 AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 " & _
		"AND TRIM(REGEXP_SUBSTR(RES_DLN_TEXT,'[^-]+',1,1)) = ? " & _
		"AND TRIM(RES_DLN_TYPE) = 'BWHC' " & _
	") " & _
	"ON ERROR_CODE = NOTE_CODE " & _
	"WHERE NOTE_CODE IS NULL"

	SQLErrorAgtFuture = "WITH ERROR_DATA AS " & _
	"( " & _
		"SELECT " & _
		"MAX(CASE WHEN WORK_HOURS > 5 AND LUNCH_FLAG IS NULL THEN 1 END) LUNCH_FLAG, " & _
		"MAX(OVERLAP_FLAG) OVERLAP_FLAG, " & _
		"MAX(INVALID_FLAG) INVALID_FLAG " & _
		"FROM " & _
		"( " & _
			"SELECT " & _
			"ROUND(24*SUM(CASE WHEN OPS_SCI_TYPE IN ('BASE','PICK','ADDT','EXTD','NEWH','TRAN','MEET','PRES','PROJ') THEN OPS_SCI_END - OPS_SCI_START ELSE 0 END) OVER (),2) WORK_HOURS, " & _
			"MAX(CASE WHEN OPS_SCI_TYPE IN ('LNCH','LNFL') THEN 1 END) OVER () LUNCH_FLAG, " & _
			"CASE " & _
				"WHEN OPS_SCI_START < LEAD(OPS_SCI_END) OVER (ORDER BY OPS_SCI_START) " & _
				"AND OPS_SCI_END > LEAD(OPS_SCI_START) OVER (ORDER BY OPS_SCI_START) " & _
				"THEN 1 " & _
			"END OVERLAP_FLAG, " & _
			"CASE WHEN OPS_SCI_START > OPS_SCI_END THEN 1 END INVALID_FLAG " & _
			"FROM OPS_SCHEDULE_INFO " & _
			"WHERE TO_DATE(OPS_SCI_START) = TO_DATE(?,'MM/DD/YYYY') " & _
			"AND OPS_SCI_STATUS = 'APP' " & _
			"AND OPS_SCI_START <> OPS_SCI_END " & _
			"AND OPS_SCI_TYPE NOT LIKE 'HOL_' " & _
			"AND OPS_SCI_OPS_USR_ID = ? " & _
		") " & _
	") " & _
	"SELECT " & _
	"DISTINCT " & _
	"LISTAGG(ERROR_CODE,';') WITHIN GROUP (ORDER BY ERROR_CODE) OVER () ERROR_CODE, " & _
	"LISTAGG(ACTION_STATUS,';') WITHIN GROUP (ORDER BY ERROR_CODE) OVER () ACTION_STATUS, " & _
	"LISTAGG(ACTION_DATA,';') WITHIN GROUP (ORDER BY ERROR_CODE) OVER () ACTION_DATA " & _
	"FROM " & _
	"( " & _
		"SELECT " & _
		"'LWAV' ERROR_CODE, " & _
		"1 ACTION_STATUS, " & _
		"'0' ACTION_DATA " & _
		"FROM ERROR_DATA " & _
		"WHERE LUNCH_FLAG = 1 " & _
		"UNION ALL " & _
		"SELECT " & _
		"'OLAP', " & _
		"0, " & _
		"'0' " & _
		"FROM ERROR_DATA " & _
		"WHERE OVERLAP_FLAG = 1 " & _
		"UNION ALL " & _
		"SELECT " & _
		"'IVLD', " & _
		"0, " & _
		"'0' " & _
		"FROM ERROR_DATA " & _
		"WHERE INVALID_FLAG = 1 " & _
		"UNION ALL " & _			
		"SELECT " & _
		"'BWHC', " & _
		"CASE WHEN CAST(SYSTIMESTAMP AT TIME ZONE 'US/CENTRAL' AS DATE) > MAX(OPS_SCI_END) THEN 1 ELSE 0 END, " & _
		"'0' " & _
		"FROM OPS_SCHEDULE_INFO " & _
		"JOIN OPS_USER_DETAIL " & _
		"ON OPS_SCI_OPS_USR_ID = OPS_USD_OPS_USR_ID " & _
		"AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 BETWEEN OPS_USD_EFF_DATE AND OPS_USD_DIS_DATE " & _
		"LEFT JOIN OPS_PARAMETER " & _
		"ON OPS_PAR_CODE = 'REDUCED_HOURS' " & _
		"AND " & _
		"( " & _
			"DECODE(OPS_USD_TEAM,'SPT','SPT','SRV','SPT','OSR','SPT','NEW','NEW',OPS_USD_TYPE) = OPS_PAR_PARENT_TYPE " & _
			"OR OPS_PAR_PARENT_TYPE = 'ALL' " & _
		") " & _
		"AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 BETWEEN OPS_PAR_EFF_DATE AND OPS_PAR_DIS_DATE " & _
		"LEFT JOIN SYS_CODE_DETAIL " & _
		"ON SYS_CDD_SYS_CDM_ID = 583 " & _
		"AND SYS_CDD_NAME = OPS_SCI_OPS_USR_ID " & _
		"AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 BETWEEN TO_DATE(REGEXP_SUBSTR(SYS_CDD_VALUE,'[^_]+',1,2),'MM/DD/YYYY') + 1 AND TO_DATE('6/27/2020','MM/DD/YYYY') " & _
		"WHERE OPS_SCI_STATUS = 'APP' " & _
		"AND OPS_SCI_TYPE NOT IN ('LNCH','LNFL') " & _
		"AND TO_DATE(OPS_SCI_START) BETWEEN TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 1 AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 " & _
		"AND OPS_SCI_OPS_USR_ID = ? " & _
		"GROUP BY OPS_USD_SCH_HOURS, OPS_PAR_VALUE, SYS_CDD_ID " & _
		"HAVING " & _
		"( " & _
			"CASE WHEN OPS_PAR_VALUE IS NOT NULL AND SYS_CDD_ID IS NULL AND ROUND(SUM(DECODE(REGEXP_INSTR(OPS_SCI_TYPE,'SLIP|MLUN'),0,0,24*(OPS_SCI_END-OPS_SCI_START))),1) = 0 THEN OPS_PAR_VALUE*OPS_USD_SCH_HOURS - ROUND(24*SUM(OPS_SCI_END-OPS_SCI_START),2) END <> 0 " & _
			"OR CASE WHEN OPS_PAR_VALUE IS NOT NULL AND SYS_CDD_ID IS NOT NULL THEN OPS_USD_SCH_HOURS - ROUND(24*SUM(OPS_SCI_END-OPS_SCI_START),2) END <> 0 " & _
			"OR CASE WHEN OPS_PAR_VALUE IS NULL THEN OPS_USD_SCH_HOURS - ROUND(24*SUM(OPS_SCI_END-OPS_SCI_START),2) END > 0 " & _
		") " & _
	") " & _
	"LEFT JOIN " & _
	"( " & _
		"SELECT " & _
		"TRIM(RES_DLN_TYPE) NOTE_CODE " & _
		"FROM RES_DAILY_STATS_NOTES " & _
		"WHERE RES_DLN_DATE = TO_DATE(?,'MM/DD/YYYY') " & _
		"AND TRIM(REGEXP_SUBSTR(RES_DLN_TEXT,'[^-]+',1,1)) = ? " & _
		"AND TRIM(RES_DLN_TYPE) IN ('LATE','FLEX','SHFT','STRT','END','NFLX','OFLX','GAP','LMIN','LWAV','OLAP','IVLD') " & _
		"UNION ALL " & _
		"SELECT " & _
		"'BWHC' " & _
		"FROM RES_DAILY_STATS_NOTES " & _
		"WHERE RES_DLN_DATE BETWEEN TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 1 AND TO_DATE(?,'MM/DD/YYYY') - TO_CHAR(TO_DATE(?,'MM/DD/YYYY'),'D') + 7 " & _
		"AND TRIM(REGEXP_SUBSTR(RES_DLN_TEXT,'[^-]+',1,1)) = ? " & _
		"AND TRIM(RES_DLN_TYPE) = 'BWHC' " & _
	") " & _
	"ON ERROR_CODE = NOTE_CODE " & _
	"WHERE NOTE_CODE IS NULL"
%>